{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-ocular/src/react/templates/documentation.jsx"],"names":["query","DocTemplate","render","htmlAst","this","props","data","docBySlug","relativeLinks","pageContext","path","location","pathname","React","Component"],"mappings":"iOASO,IAAMA,EAAK,aAaGC,E,gLACnBC,OAAA,WAAU,IACDC,EAAWC,KAAKC,MAAMC,KAAKC,UAA3BJ,QACAK,EAAiBJ,KAAKC,MAAMI,YAA5BD,cACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUE,KAAMN,KAAKC,MAAMM,SAASC,SAClCJ,cAAeA,EACfL,QAASA,M,GARsBU,IAAMC","file":"component---node-modules-gatsby-theme-ocular-src-react-templates-documentation-jsx-e836a293269c9adb3efd.js","sourcesContent":["import React from 'react';\nimport {graphql} from 'gatsby';\n\nimport Markdown from '../components/markdown';\n\nimport {MarkdownBody} from '../styled/typography';\n\n// Query for the markdown doc by slug\n// (Note: We could just search the allMarkdown from WebsiteConfig ourselves)\nexport const query = graphql`\n  query DocBySlug($slug: String!) {\n    docBySlug: markdownRemark(fields: {slug: {eq: $slug}}) {\n      htmlAst\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n\nexport default class DocTemplate extends React.Component {\n  render() {\n    const {htmlAst} = this.props.data.docBySlug;\n    const {relativeLinks} = this.props.pageContext;\n    return (\n      <MarkdownBody>\n        <Markdown path={this.props.location.pathname}\n          relativeLinks={relativeLinks}\n          htmlAst={htmlAst} />\n      </MarkdownBody>\n    );\n  }\n}\n"],"sourceRoot":""}