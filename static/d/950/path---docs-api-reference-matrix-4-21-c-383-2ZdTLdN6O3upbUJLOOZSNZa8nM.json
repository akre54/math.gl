{"data":{"docBySlug":{"html":"<h1 id=\"matrix4\"><a href=\"#matrix4\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Matrix4</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Matrix4</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MathArray</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Array</span></code></pre></div>\n<p>A 4x4 matrix. Any arguments can be plain JavaScript arrays or other <code class=\"language-text\">math.gl</code> objects.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Matrix4<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token template-string\"><span class=\"token string\">`math.gl`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Copy a matrix to a <code class=\"language-text\">Matrix4</code> so that it can be manipulated (and mutated) with <code class=\"language-text\">Matrix4</code> methods:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">IDENTITY</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Matrix4</span><span class=\"token punctuation\">(</span><span class=\"token constant\">IDENTITY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Create a perspective projection matrix</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> projectionMatrix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Matrix4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">perspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>fov<span class=\"token punctuation\">,</span> aspect<span class=\"token punctuation\">,</span> near<span class=\"token punctuation\">,</span> far<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Create an orthograhic projection matrix</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"></code></pre></div>\n<p>Invert a matrix</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> inverse <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span><span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Transform a vector as a point (including translations)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const transform = new Matrix4()...;\nconst vector2 = transform.transformPoint([0, 0]);\nconst vector3 = transform.transformPoint([0, 1, 2]);\nconst vector4 = transform.transformPoint([0, 1, 2, 1]);</code></pre></div>\n<p>Transform a vector as a direction (NOT including translations)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const transform = new Matrix4()...;\nconst vector2 = transform.transformDirection([0, 0]);\nconst vector3 = transform.transformDirection([0, 1, 2]);\nconst vector4 = transform.transformDirection([0, 1, 2, 1]);</code></pre></div>\n<h2 id=\"methods\"><a href=\"#methods\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<p>Many of the most commonly used methods are inherited from <a href=\"./docs/api-reference/math-array.md\"><code class=\"language-text\">MathArray</code></a>:</p>\n<ul>\n<li><code class=\"language-text\">matrix4.clone()</code></li>\n<li><code class=\"language-text\">matrix4.copy(array)</code></li>\n<li><code class=\"language-text\">matrix4.set(...args)</code></li>\n<li><code class=\"language-text\">matrix4.fromArray(array, offset = 0)</code></li>\n<li><code class=\"language-text\">matrix4.toString()</code></li>\n<li><code class=\"language-text\">matrix4.toArray(array = [], offset = 0)</code></li>\n<li><code class=\"language-text\">matrix4.equals(array)</code></li>\n<li><code class=\"language-text\">matrix4.exactEquals(array)</code></li>\n<li><code class=\"language-text\">matrix4.validate(array = this)</code></li>\n<li><code class=\"language-text\">matrix4.check(array = this)</code></li>\n<li><code class=\"language-text\">matrix4.normalize()</code></li>\n</ul>\n<p>Note that <code class=\"language-text\">Matrix4</code> is a subclass of the built in JavaScript <code class=\"language-text\">Array</code> and can thus e.g. be supplied as a parameter to any function expecting an <code class=\"language-text\">Array</code>.</p>\n<h3 id=\"constructor\"><a href=\"#constructor\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor</h3>\n<p>Creates an empty <code class=\"language-text\">Matrix4</code></p>\n<p><code class=\"language-text\">new Matrix4()</code></p>\n<h3 id=\"identity\"><a href=\"#identity\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>identity</h3>\n<p>Sets the matrix to the multiplicative identity matrix.</p>\n<p><code class=\"language-text\">matrix4.identity()</code></p>\n<h3 id=\"set\"><a href=\"#set\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>set</h3>\n<p>Sets the elements of the matrix.</p>\n<p><code class=\"language-text\">matrix4.set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33)</code></p>\n<h3 id=\"fromquaternion\"><a href=\"#fromquaternion\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fromQuaternion</h3>\n<p>Sets the matrix to a transformation corresponding to the rotations represented by the given quaternion.</p>\n<p><code class=\"language-text\">matrix4.fromQuaternion(quaternion)</code></p>\n<ul>\n<li><code class=\"language-text\">quaternion</code> (<code class=\"language-text\">Quaternion</code>) - the quaternion  to create matrix from</li>\n</ul>\n<h3 id=\"frustum\"><a href=\"#frustum\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>frustum</h3>\n<p>Generates a frustum matrix with the given bounds.</p>\n<p><code class=\"language-text\">matrix4.frustum({left, right, bottom, top, near, far})</code></p>\n<ul>\n<li><code class=\"language-text\">left</code> (<code class=\"language-text\">Number</code>) - Left bound of the frustum</li>\n<li><code class=\"language-text\">right</code> (<code class=\"language-text\">Number</code>) - Right bound of the frustum</li>\n<li><code class=\"language-text\">bottom</code> (<code class=\"language-text\">Number</code>) - Bottom bound of the frustum</li>\n<li><code class=\"language-text\">top</code> (<code class=\"language-text\">Number</code>) - Top bound of the frustum</li>\n<li><code class=\"language-text\">near</code> (<code class=\"language-text\">Number</code>) - Near bound of the frustum</li>\n<li><code class=\"language-text\">far</code> (<code class=\"language-text\">Number</code>) - Far bound of the frustum</li>\n</ul>\n<h3 id=\"lookat\"><a href=\"#lookat\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lookAt</h3>\n<p>Generates a look-at matrix with the given eye position, focal point, and up axis</p>\n<p><code class=\"language-text\">matrix4.lookAt({eye, center, up})</code></p>\n<ul>\n<li><code class=\"language-text\">eye</code> (<code class=\"language-text\">Vector3</code>|<code class=\"language-text\">Number[3]</code>) - Position of the viewer</li>\n<li><code class=\"language-text\">center</code> (<code class=\"language-text\">=</code>) - 0, 0, 0]  vec3  Point the viewer is looking at</li>\n<li><code class=\"language-text\">up</code> (<code class=\"language-text\">=</code>) - 0, 1, 0]  vec3  vec3 pointing up</li>\n</ul>\n<h3 id=\"ortho\"><a href=\"#ortho\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ortho</h3>\n<p>Generates a orthogonal projection matrix with the given bounds</p>\n<p><code class=\"language-text\">matrix4.ortho({left, right, bottom, top, near = 0.1, far = 500})</code></p>\n<ul>\n<li><code class=\"language-text\">left</code> (<code class=\"language-text\">Number</code>) - Left bound of the frustum</li>\n<li><code class=\"language-text\">right</code> (<code class=\"language-text\">Number</code>) - Right bound of the frustum</li>\n<li><code class=\"language-text\">bottom</code> (<code class=\"language-text\">Number</code>) - Bottom bound of the frustum</li>\n<li><code class=\"language-text\">top</code> (<code class=\"language-text\">Number</code>) - Top bound of the frustum</li>\n<li><code class=\"language-text\">near</code> (<code class=\"language-text\">Number</code>) - Near bound of the frustum</li>\n<li><code class=\"language-text\">far</code> (<code class=\"language-text\">Number</code>) - Far bound of the frustum</li>\n</ul>\n<h3 id=\"orthographic\"><a href=\"#orthographic\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>orthographic</h3>\n<p>Generates an orthogonal projection matrix with the same parameters\nas a perspective matrix (plus <code class=\"language-text\">focalDistance</code>).</p>\n<ul>\n<li>\n<p>Matrix4.orthographic({fovy, aspect, focalDistance, near, far})</p>\n</li>\n<li>\n<p><code class=\"language-text\">fovy</code> (<code class=\"language-text\">Number</code>) - Vertical field of view in radians</p>\n</li>\n<li>\n<p><code class=\"language-text\">aspect</code> (<code class=\"language-text\">Number</code>) - Aspect ratio. typically viewport width/height</p>\n</li>\n<li>\n<p><code class=\"language-text\">focalDistance</code> (<code class=\"language-text\">Number</code>) - selects which plane in the perspective view frustum should be used to calculate the size of the orthographic view box.</p>\n</li>\n<li>\n<p><code class=\"language-text\">near</code>=<code class=\"language-text\">0.1</code> (<code class=\"language-text\">Number</code>) - Near bound of the frustum</p>\n</li>\n<li>\n<p><code class=\"language-text\">far</code>=<code class=\"language-text\">500</code> (<code class=\"language-text\">Nmber</code>) - Far bound of the frustum</p>\n</li>\n</ul>\n<blockquote>\n<p>In applications it is not unusual to want to offer both perspective and orthographic views and this method is supplied to make this as simple as possible.</p>\n</blockquote>\n<h3 id=\"perspective\"><a href=\"#perspective\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>perspective</h3>\n<p>Generates a perspective projection matrix with the given bounds</p>\n<p><code class=\"language-text\">matrix4.perspective({\n  fovy = 45 * Math.PI - / 180,\n  aspect = 1,\n  near = 0.1,\n  far = 500\n})</code></p>\n<ul>\n<li><code class=\"language-text\">fovy</code>=<code class=\"language-text\">45</code> (<code class=\"language-text\">Number</code>) - Vertical field of view in radians (default is 45 degrees specified in radians)</li>\n<li><code class=\"language-text\">aspect</code>=<code class=\"language-text\">1</code> (<code class=\"language-text\">Number</code>) - Aspect ratio. typically viewport width/height</li>\n<li><code class=\"language-text\">near</code>=<code class=\"language-text\">0.1</code> (<code class=\"language-text\">Number</code>) - Near bound of the frustum</li>\n<li><code class=\"language-text\">far</code>=<code class=\"language-text\">500</code> (<code class=\"language-text\">Number</code>) - Far bound of the frustum</li>\n</ul>\n<h3 id=\"determinant\"><a href=\"#determinant\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>determinant()</h3>\n<p>Returns the determinant of the matrix (does not modify the matrix).</p>\n<p><code class=\"language-text\">const determinant = matrix4.determinant()</code></p>\n<p>Returns (<code class=\"language-text\">Number</code>) - the determinant</p>\n<ul>\n<li>If the determinant is zero, the matrix is not invertible.</li>\n<li>Determinant calculation is somewhat expensive.</li>\n</ul>\n<h3 id=\"transpose\"><a href=\"#transpose\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>transpose</h3>\n<p>Sets this matrix to its transpose matrix.</p>\n<p><code class=\"language-text\">matrix4.transpose()</code></p>\n<ul>\n<li>The transpose matrix mirrors the original matrix elements in the diagonal.</li>\n</ul>\n<h3 id=\"invert\"><a href=\"#invert\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>invert</h3>\n<p>Sets this matrix to its inverse matrix.</p>\n<p><code class=\"language-text\">matrix4.invert()</code></p>\n<ul>\n<li>The inverse matrix mirrors the original matrix elements in the diagonal.</li>\n</ul>\n<h3 id=\"multiplyleft\"><a href=\"#multiplyleft\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>multiplyLeft</h3>\n<p>Multiplies in another matrix from the left</p>\n<p><code class=\"language-text\">matrix4.multiplyLeft(matrix4)</code></p>\n<ul>\n<li>When using <code class=\"language-text\">Matrix4</code> to transform vectors, the vectors are multiplied in from the right. This means that the multiplying in a matrix from the left will cause it to be applied last during transformation (unless additional matrices are multiplied in from the left of course).</li>\n</ul>\n<h3 id=\"multiplyright\"><a href=\"#multiplyright\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>multiplyRight</h3>\n<p><code class=\"language-text\">matrix4.multiplyRight(matrix4)</code></p>\n<ul>\n<li>When using <code class=\"language-text\">Matrix4</code> to transform vectors, the vectors are multiplied in from the right. This means that the multiplying in a matrix from the left will cause it to be applied last during transformation (unless additional matrices are multiplied in from the left of course).</li>\n</ul>\n<h3 id=\"rotatex\"><a href=\"#rotatex\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rotateX</h3>\n<p>Adds a rotation by the given angle around the X axis. Equivalent to right multiplying the new transform into the matrix but more performant.</p>\n<p><code class=\"language-text\">matrix4.rotateX(radians)</code></p>\n<h3 id=\"rotatey\"><a href=\"#rotatey\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rotateY</h3>\n<p>Adds a rotation by the given angle around the Y axis.</p>\n<p><code class=\"language-text\">rotateY(radians)</code></p>\n<ul>\n<li>Equivalent to right multiplying the new transform into the matrix but more performant.</li>\n</ul>\n<h3 id=\"rotatez\"><a href=\"#rotatez\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rotateZ</h3>\n<p>Adds a rotation by the given angle around the Z axis.</p>\n<p><code class=\"language-text\">matrix4.rotateZ(radians)</code></p>\n<ul>\n<li>Equivalent to right multiplying the new transform into the matrix but more performant.</li>\n</ul>\n<h3 id=\"rotatexyzrx-ry-rz\"><a href=\"#rotatexyzrx-ry-rz\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rotateXYZ([rx, ry, rz])</h3>\n<p>Adds successive rotations by the given angles around the X, Y and Z axis.</p>\n<p><code class=\"language-text\">rotateXYZ([rx, ry, rz])</code></p>\n<ul>\n<li>Equivalent to right multiplying the new transform into the matrix but more performant.</li>\n</ul>\n<h3 id=\"rotateaxisradians-axis\"><a href=\"#rotateaxisradians-axis\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rotateAxis(radians, axis)</h3>\n<p>Adds successive rotations by the given angles around the X, Y and Z axis.</p>\n<p><code class=\"language-text\">rotateAxis(radians, axis)</code></p>\n<p>Equivalent to right multiplying the new transform into the matrix but more performant.</p>\n<h3 id=\"scale\"><a href=\"#scale\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scale</h3>\n<p>Adds a scaling transform, each axis can be scaled independently.</p>\n<p><code class=\"language-text\">matrix4.scale(factor)</code></p>\n<ul>\n<li><code class=\"language-text\">factor</code> (Number) - scale factor to be applied to each axis.</li>\n</ul>\n<p><code class=\"language-text\">matrix4.scale([x, y, z])</code></p>\n<ul>\n<li><code class=\"language-text\">x</code> (Number) - scale factor to be multiplied into x component</li>\n<li><code class=\"language-text\">y</code> (Number) - scale factor to be multiplied into y component</li>\n<li><code class=\"language-text\">z</code> (Number) - scale factor to be multiplied into z component</li>\n</ul>\n<p>Equivalent to right multiplying the new transform into the matrix but more performant.</p>\n<ul>\n<li>During vector transformation all coordinates will be multiplied with the given factors.</li>\n<li>Scale with <code class=\"language-text\">-1</code> will flip the coordinate system in that axis.</li>\n<li>Scale with <code class=\"language-text\">0</code> will drop that component.</li>\n</ul>\n<h3 id=\"translate\"><a href=\"#translate\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>translate</h3>\n<p>Adds a translation to the matrix.</p>\n<p><code class=\"language-text\">matrix4.translate([x, y, z])</code></p>\n<ul>\n<li><code class=\"language-text\">x</code> (Number) - translation to be added to the x component</li>\n<li><code class=\"language-text\">y</code> (Number) - translation to be added to the y component</li>\n<li><code class=\"language-text\">z</code> (Number) - translation to be added to the z component</li>\n</ul>\n<p>Equivalent to right multiplying the new transform into the matrix but more performant.</p>\n<p>During vector transformation the given translation values are added to each component of the vector being transformed.</p>\n<h3 id=\"transformpoint\"><a href=\"#transformpoint\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>transformPoint</h3>\n<p>Transforms any 2, 3 or 4 element vector as a \"point\" by multiplying it (from the right) with this matrix. <code class=\"language-text\">Point</code> here means that the returned vector will include any translations in this matrix.</p>\n<p><code class=\"language-text\">const vector = matrix4.transformPoint(vector, out=)</code></p>\n<ul>\n<li><code class=\"language-text\">vector</code> (<code class=\"language-text\">Array</code>|<code class=\"language-text\">Vector2</code>|<code class=\"language-text\">Vector3</code>|<code class=\"language-text\">Vector4</code>)</li>\n<li><code class=\"language-text\">out</code> - unless supplied, will be a Vector2, Vector3 or Vector4, matching the length of input vector.\nReturns <code class=\"language-text\">out</code>, or a newly minted <code class=\"language-text\">Vector2</code>, <code class=\"language-text\">Vector3</code> or <code class=\"language-text\">Vector4</code></li>\n</ul>\n<ul>\n<li>If <code class=\"language-text\">vector</code> is specified in homogenous coordinates, <code class=\"language-text\">w</code> coordinate must NOT be <code class=\"language-text\">0</code>.</li>\n<li>If <code class=\"language-text\">vector</code> is specified in homogenous coordinates the returned vector will be <code class=\"language-text\">w</code> adjusted, (i.e. <code class=\"language-text\">w</code> coordinate will be <code class=\"language-text\">1</code>, even if the supplied vector was not normalized).</li>\n</ul>\n<h3 id=\"transformdirection\"><a href=\"#transformdirection\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>transformDirection</h3>\n<p>Transforms any 2, 3 or 4 element vector interpreted as a direction (i.e. all vectors are based in the origin so the transformation not pick up any translations from the matrix).</p>\n<p><code class=\"language-text\">const vector = matrix4.transformDirection(vector, out)</code></p>\n<ul>\n<li>If <code class=\"language-text\">vector</code> is specified in homogenous coordinates, <code class=\"language-text\">w</code> coordinate must be <code class=\"language-text\">0</code>.</li>\n</ul>\n<h3 id=\"transformvector-deprecated\"><a href=\"#transformvector-deprecated\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>transformVector (DEPRECATED)</h3>\n<p>Confusingly corresponds to <code class=\"language-text\">transformPoint</code>.</p>\n<p><code class=\"language-text\">transformVector(vector, out)</code></p>\n<ul>\n<li><code class=\"language-text\">vector</code> (<code class=\"language-text\">Array</code>|<code class=\"language-text\">Vector2</code>|<code class=\"language-text\">Vector3</code>|<code class=\"language-text\">Vector4</code>)</li>\n<li><code class=\"language-text\">out</code> - unless supplied, will be a Vector2, Vector3 or Vector4, matching the length of input vector.\nReturns <code class=\"language-text\">out</code>, or a newly minted <code class=\"language-text\">Vector2</code>, <code class=\"language-text\">Vector3</code> or <code class=\"language-text\">Vector4</code></li>\n</ul>\n<h2 id=\"remarks\"><a href=\"#remarks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remarks</h2>\n<ul>\n<li>All transforms are effectively \"right multiplied\" onto the matrix (meaning that during transform they will be applied in opposite order).</li>\n<li><code class=\"language-text\">Matrix4</code> is stored internally in column major format (per WebGL conventions). This only matters when you read out the matrix to use it with other software.</li>\n</ul>","timeToRead":9,"excerpt":"Matrix4 A 4x4 matrix. Any arguments can be plain JavaScript arrays or other   objects. Usage Copy a matrix to a   so that it can be…","frontmatter":{"title":"Matrix4","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"relativeLinks":{"../../roadmap.md":"/docs/roadmap","docs/roadmap.md":"/docs/roadmap","../../roadmap":"/docs/roadmap","docs/roadmap":"/docs/roadmap","../../README.md":"/docs","docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../whats-new.md":"/docs/whats-new","docs/whats-new.md":"/docs/whats-new","../../whats-new":"/docs/whats-new","docs/whats-new":"/docs/whats-new","../../upgrade-guide.md":"/docs/upgrade-guide","docs/upgrade-guide.md":"/docs/upgrade-guide","../../upgrade-guide":"/docs/upgrade-guide","docs/upgrade-guide":"/docs/upgrade-guide","../../get-started/README.MD":"/docs/get-started/README.MD","docs/get-started/README.MD":"/docs/get-started/README.MD","../../get-started/using-with-gl-matrix.md":"/docs/get-started/using-with-gl-matrix","docs/get-started/using-with-gl-matrix.md":"/docs/get-started/using-with-gl-matrix","../../get-started/using-with-gl-matrix":"/docs/get-started/using-with-gl-matrix","docs/get-started/using-with-gl-matrix":"/docs/get-started/using-with-gl-matrix","../../wip/using-vectors.md":"/docs/wip/using-vectors","docs/wip/using-vectors.md":"/docs/wip/using-vectors","../../wip/using-vectors":"/docs/wip/using-vectors","docs/wip/using-vectors":"/docs/wip/using-vectors","../../get-started/using-with-three-js.md":"/docs/get-started/using-with-three-js","docs/get-started/using-with-three-js.md":"/docs/get-started/using-with-three-js","../../get-started/using-with-three-js":"/docs/get-started/using-with-three-js","docs/get-started/using-with-three-js":"/docs/get-started/using-with-three-js","../../developer-guide/coordinate-systems.md":"/docs/developer-guide/coordinate-systems","docs/developer-guide/coordinate-systems.md":"/docs/developer-guide/coordinate-systems","../../developer-guide/coordinate-systems":"/docs/developer-guide/coordinate-systems","docs/developer-guide/coordinate-systems":"/docs/developer-guide/coordinate-systems","../../developer-guide/debugging.md":"/docs/developer-guide/debugging","docs/developer-guide/debugging.md":"/docs/developer-guide/debugging","../../developer-guide/debugging":"/docs/developer-guide/debugging","docs/developer-guide/debugging":"/docs/developer-guide/debugging","../../developer-guide/performance.md":"/docs/developer-guide/performance","docs/developer-guide/performance.md":"/docs/developer-guide/performance","../../developer-guide/performance":"/docs/developer-guide/performance","docs/developer-guide/performance":"/docs/developer-guide/performance","../../developer-guide/homogenous-coordinates.md":"/docs/developer-guide/homogenous-coordinates","docs/developer-guide/homogenous-coordinates.md":"/docs/developer-guide/homogenous-coordinates","../../developer-guide/homogenous-coordinates":"/docs/developer-guide/homogenous-coordinates","docs/developer-guide/homogenous-coordinates":"/docs/developer-guide/homogenous-coordinates","../../developer-guide/using-transformations.md":"/docs/developer-guide/using-transformations","docs/developer-guide/using-transformations.md":"/docs/developer-guide/using-transformations","../../developer-guide/using-transformations":"/docs/developer-guide/using-transformations","docs/developer-guide/using-transformations":"/docs/developer-guide/using-transformations","../../developer-guide/view-and-projection.md":"/docs/developer-guide/view-and-projection","docs/developer-guide/view-and-projection.md":"/docs/developer-guide/view-and-projection","../../developer-guide/view-and-projection":"/docs/developer-guide/view-and-projection","docs/developer-guide/view-and-projection":"/docs/developer-guide/view-and-projection","../euler.md":"/docs/api-reference/euler","docs/api-reference/euler.md":"/docs/api-reference/euler","../euler":"/docs/api-reference/euler","docs/api-reference/euler":"/docs/api-reference/euler","../pose.md":"/docs/api-reference/pose","docs/api-reference/pose.md":"/docs/api-reference/pose","../pose":"/docs/api-reference/pose","docs/api-reference/pose":"/docs/api-reference/pose","../quaternion.md":"/docs/api-reference/quaternion","docs/api-reference/quaternion.md":"/docs/api-reference/quaternion","../quaternion":"/docs/api-reference/quaternion","docs/api-reference/quaternion":"/docs/api-reference/quaternion","../utilities.md":"/docs/api-reference/utilities","docs/api-reference/utilities.md":"/docs/api-reference/utilities","../utilities":"/docs/api-reference/utilities","docs/api-reference/utilities":"/docs/api-reference/utilities","../spherical-coordinates.md":"/docs/api-reference/spherical-coordinates","docs/api-reference/spherical-coordinates.md":"/docs/api-reference/spherical-coordinates","../spherical-coordinates":"/docs/api-reference/spherical-coordinates","docs/api-reference/spherical-coordinates":"/docs/api-reference/spherical-coordinates","../../wip/features.md":"/docs/wip/features","docs/wip/features.md":"/docs/wip/features","../../wip/features":"/docs/wip/features","docs/wip/features":"/docs/wip/features","../../developer-guide/rotations.md":"/docs/developer-guide/rotations","docs/developer-guide/rotations.md":"/docs/developer-guide/rotations","../../developer-guide/rotations":"/docs/developer-guide/rotations","docs/developer-guide/rotations":"/docs/developer-guide/rotations","../math-array.md":"/docs/api-reference/math-array","docs/api-reference/math-array.md":"/docs/api-reference/math-array","../math-array":"/docs/api-reference/math-array","docs/api-reference/math-array":"/docs/api-reference/math-array","../vector2.md":"/docs/api-reference/vector2","docs/api-reference/vector2.md":"/docs/api-reference/vector2","../vector2":"/docs/api-reference/vector2","docs/api-reference/vector2":"/docs/api-reference/vector2","../../developer-guide/floating-point.md":"/docs/developer-guide/floating-point","docs/developer-guide/floating-point.md":"/docs/developer-guide/floating-point","../../developer-guide/floating-point":"/docs/developer-guide/floating-point","docs/developer-guide/floating-point":"/docs/developer-guide/floating-point","../addons/polygon.md":"/docs/api-reference/addons/polygon","docs/api-reference/addons/polygon.md":"/docs/api-reference/addons/polygon","../addons/polygon":"/docs/api-reference/addons/polygon","docs/api-reference/addons/polygon":"/docs/api-reference/addons/polygon","../vector4.md":"/docs/api-reference/vector4","docs/api-reference/vector4.md":"/docs/api-reference/vector4","../vector4":"/docs/api-reference/vector4","docs/api-reference/vector4":"/docs/api-reference/vector4","../vector3.md":"/docs/api-reference/vector3","docs/api-reference/vector3.md":"/docs/api-reference/vector3","../vector3":"/docs/api-reference/vector3","docs/api-reference/vector3":"/docs/api-reference/vector3","":"/docs/api-reference/matrix4","docs/api-reference/matrix4.md":"/docs/api-reference/matrix4","docs/api-reference/matrix4":"/docs/api-reference/matrix4"},"slug":"docs/api-reference/matrix4","toc":"docs"}}