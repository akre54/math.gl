{"version":3,"sources":["webpack:///../examples/benchmarks/bench-results.js","webpack:///../modules/core/test/lib/javascript.bench.js","webpack:///../modules/core/src/lib/assert.js","webpack:///../modules/core/src/lib/common.js","webpack:///../modules/core/src/classes/base/math-array.js","webpack:///../modules/core/src/lib/validators.js","webpack:///../modules/core/src/classes/base/vector.js","webpack:///../modules/core/src/lib/gl-matrix-extras.js","webpack:///../modules/core/src/classes/vector3.js","webpack:///../modules/core/test/lib/common.bench.js","webpack:///../modules/core/src/classes/vector2.js","webpack:///../modules/core/test/classes/vector2.bench.js","webpack:///../modules/core/test/classes/vector3.bench.js","webpack:///../modules/core/src/classes/vector4.js","webpack:///../modules/core/test/classes/vector4.bench.js","webpack:///../modules/core/src/classes/base/matrix.js","webpack:///../modules/core/src/classes/matrix4.js","webpack:///../modules/core/test/classes/matrix4.bench.js","webpack:///../modules/core/test/bench.js","webpack:///../modules/geospatial/src/constants.js","webpack:///../modules/geospatial/src/type-utils.js","webpack:///../modules/core/src/lib/math-utils.js","webpack:///../modules/geospatial/src/ellipsoid/helpers/scale-to-geodetic-surface.js","webpack:///../modules/geospatial/src/ellipsoid/helpers/ellipsoid-transform.js","webpack:///../modules/geospatial/src/ellipsoid/ellipsoid.js","webpack:///../modules/geospatial/test/ellipsoid/ellipsoid.bench.js","webpack:///../modules/geospatial/test/bench.js","webpack:///../modules/culling/src/constants.js","webpack:///../modules/culling/src/lib/axis-aligned-bounding-box.js","webpack:///../modules/culling/src/lib/bounding-sphere.js","webpack:///../modules/core/src/classes/matrix3.js","webpack:///../modules/culling/src/algorithms/compute-eigen-decomposition.js","webpack:///../modules/culling/src/algorithms/bounding-box-from-points.js","webpack:///../modules/culling/src/lib/oriented-bounding-box.js","webpack:///../modules/culling/src/lib/plane.js","webpack:///../modules/culling/src/lib/culling-volume.js","webpack:///../modules/culling/src/lib/perspective-off-center-frustum.js","webpack:///../modules/culling/src/lib/perspective-frustum.js","webpack:///../modules/culling/src/algorithms/bounding-sphere-from-points.js","webpack:///../modules/culling/src/index.js","webpack:///../modules/culling/test/bench.js","webpack:///../test/modules.bench.js","webpack:///../examples/benchmarks/app.js"],"names":["getPercent","score","logScore","Math","min","max","log10","percent","GREEN","ORANGE","RED","Star","fontSize","color","BarCell","stars","children","width","height","backgroundColor","borderRadius","transition","Array","fill","map","_","i","PerformanceBarCell","row","floor","BenchResults","_renderTable","log","props","display","Header","accessor","Cell","formattedValue","id","replace","maxWidth","render","Component","IDENTITY","ClassNoConstructor","ClassWithConstructor","data","ClassWithConstructorXYZ","x","y","z","w","ClassWithConstructor04","ArrayExtenderNoConstructor","ArrayExtenderEmptyConstructor","ArrayExtender","XYZVector","XYZVectorLogicalOr","XYZVectorBitwiseOr","javascriptBench","suite","addReferenceBenchmarks","group","add","assert","condition","message","Error","RADIANS_TO_DEGREES","PI","DEGREES_TO_RADIANS","config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","configure","options","key","round","value","formatValue","parseFloat","toPrecision","isArray","ArrayBuffer","isView","length","undefined","duplicateArray","array","clone","func","result","toRadians","degrees","radians","toDegrees","sin","angle","cos","tan","asin","acos","atan","clamp","lerp","a","b","t","ai","equals","epsilon","oldEpsilon","abs","exactEquals","constructor","withEpsilon","oldPrecision","MathArray","copy","from","arrayOrObject","fromObject","fromArray","offset","ELEMENTS","check","to","toArray","toObject","toTarget","target","toFloat32Array","Float32Array","toString","formatString","opts","string","name","negate","vector","minVector","maxVector","vectors","subtract","scale","multiply","sub","setScalar","addScalar","subScalar","multiplyScalar","scalar","divideScalar","clampScalar","multiplyByScalar","validate","valid","Number","isFinite","validateVector","v","checkNumber","checkVector","callerName","deprecated","method","version","console","warn","Vector","len","sqrt","lengthSquared","magnitude","magnitudeSquared","distance","mathArray","distanceSquared","dist","dot","product","normalize","divide","lengthSq","distanceTo","distanceToSquared","getComponent","setComponent","addVectors","subVectors","multiplyVectors","addScaledVector","vec2_transformMat4AsVector","out","m","vec3_transformMat4AsVector","vec3_transformMat2","vec4_transformMat2","vec4_transformMat3","ORIGIN","Vector3","arguments","set","object","vec3","cross","rotateX","origin","rotateY","rotateZ","transform","matrix4","transformAsPoint","transformAsVector","transformByMatrix3","matrix3","transformByMatrix2","matrix2","transformByQuaternion","quaternion","classicArray","float32Array","float64Array","Float64Array","vector3","commonBench","Vector2","horizontalAngle","atan2","verticalAngle","vec2","transformByMatrix2x3","matrix2x3","vector2","vector2Bench","ObjectVector","objectVector","arrayVector","vector3Bench","Vector4","vec4","applyMatrix4","vector4","vector4Bench","Matrix","RANK","col","getElementIndex","getElement","setElement","getColumn","columnIndex","firstIndex","setColumn","columnVector","Object","freeze","ZERO","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","constants","Matrix4","identity","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","fromQuaternion","q","mat4","frustum","left","right","bottom","top","near","far","Infinity","_computeInfinitePerspectiveOffCenter","column0Row0","column1Row1","column2Row0","column2Row1","column2Row2","column2Row3","column3Row2","lookAt","eye","center","up","ortho","orthographic","fovy","aspect","focalDistance","halfY","perspective","fov","determinant","getScale","getTranslation","getRotation","scaleResult","inverseScale0","inverseScale1","inverseScale2","transpose","invert","multiplyLeft","multiplyRight","rotateXYZ","rx","ry","rz","rotateAxis","axis","factor","translate","vec","makeRotationX","makeTranslation","transformPoint","transformVector","transformDirection","mathglVector4","dirVector4","pointVector4","matrix4Bench","coreBench","WGS84_RADIUS_X","WGS84_RADIUS_Y","WGS84_RADIUS_Z","WGS84_CONSTANTS","radii","radiiSquared","oneOverRadii","oneOverRadiiSquared","maximumRadius","centerToleranceSquared","noop","scratchVector","fromCartographic","cartographic","longitude","latitude","fromCartographicToRadians","cartographicRadians","fromCartographicToDegrees","toCartographic","toCartographicFromRadians","toCartographicFromDegrees","isWGS84","x2","y2","z2","EPSILON1","EPSILON2","EPSILON3","EPSILON4","EPSILON5","EPSILON6","EPSILON7","EPSILON8","EPSILON9","EPSILON10","EPSILON11","EPSILON12","EPSILON13","EPSILON14","EPSILON15","EPSILON16","EPSILON17","EPSILON18","EPSILON19","EPSILON20","PI_OVER_TWO","PI_OVER_FOUR","PI_OVER_SIX","TWO_PI","scaleToGeodeticSurfaceIntersection","scaleToGeodeticSurfaceGradient","scaleToGeodeticSurface","cartesian","ellipsoid","positionX","positionY","positionZ","oneOverRadiiX","oneOverRadiiY","oneOverRadiiZ","squaredNorm","ratio","intersection","oneOverRadiiSquaredX","oneOverRadiiSquaredY","oneOverRadiiSquaredZ","gradient","lambda","correction","xMultiplier","yMultiplier","zMultiplier","xMultiplier2","yMultiplier2","zMultiplier2","xMultiplier3","yMultiplier3","zMultiplier3","denominator","derivative","_MathUtils","scratchOrigin","VECTOR_PRODUCT_LOCAL_FRAME","south","north","west","east","down","degeneratePositionLocalFrame","scratchAxisVectors","scratchVector1","scratchVector2","scratchVector3","localFrameToFixedFrame","firstAxis","secondAxis","thirdAxis","cartesianOrigin","thirdAxisInferred","firstAxisVector","secondAxisVector","thirdAxisVector","atPole","equalsEpsilon","sign","geodeticSurfaceNormal","scratchNormal","scratchK","scratchPosition","scratchHeight","scratchCartesian","wgs84","Ellipsoid","radiiToTheFourth","minimumRadius","squaredXOverSquaredZ","Boolean","cartographicToCartesian","normal","k","geodeticSurfaceNormalCartographic","gamma","cartesianToCartographic","point","h","eastNorthUpToFixedFrame","geocentricSurfaceNormal","cartographicVectorRadians","cosLatitude","scaleToGeocentricSurface","beta","transformPositionToScaledSpace","position","transformPositionFromScaledSpace","getSurfaceNormalIntersectionWithZAxis","buffer","WGS84","spaceCartesian","spaceCartographic","resultVector","resultMatrix","ellipsoidBench","geospatialBench","INTERSECT","OUTSIDE","INTERSECTING","INSIDE","Intersect","AxisAlignedBoundingBox","minimum","maximum","fromPoints","positions","minimumX","minimumY","minimumZ","maximumX","maximumY","maximumZ","p","intersectPlane","plane","e","s","BoundingSphere","radius","fromCenterRadius","fromCornerPoints","corner","oppositeCorner","union","boundingSphere","leftCenter","leftRadius","rightCenter","rightRadius","toRightCenter","centerSeparation","halfDistanceBetweenTangentPoints","expand","distanceToPlane","distanceSquaredTo","delta","Matrix3","mat3","rotate","transformVector2","transformVector3","scratchMatrix","scratchUnitary","scratchDiagonal","jMatrix","jMatrixTranspose","computeEigenDecomposition","matrix","EIGEN_TOLERANCE","EIGEN_MAX_SWEEPS","count","sweep","unitaryMatrix","diagonalMatrix","computeFrobeniusNorm","offDiagonalFrobeniusNorm","shurDecomposition","unitary","diagonal","norm","temp","rowVal","colVal","tolerance","maxDiagonal","rotAxis","c","qq","pp","qp","tau","scratchVector4","scratchVector5","scratchVector6","scratchCovarianceResult","scratchEigenResult","makeOrientedBoundingBoxfromPoints","halfAxes","meanPoint","invLength","exx","exy","exz","eyy","eyz","ezz","covarianceMatrix","rotation","v1","v2","v3","u1","MAX_VALUE","u2","u3","l1","l2","l3","scratchOffset","scratchVectorU","scratchVectorV","scratchVectorW","scratchPPrime","scratchCorner","scratchToCenter","fromOrientedBoundingBoxScratchU","fromOrientedBoundingBoxScratchV","fromOrientedBoundingBoxScratchW","MATRIX3","COLUMN0ROW0","COLUMN0ROW1","COLUMN0ROW2","COLUMN1ROW0","COLUMN1ROW1","COLUMN1ROW2","COLUMN2ROW0","COLUMN2ROW1","COLUMN2ROW2","OrientedBoundingBox","points","getBoundingSphere","u","cornerVector","normalX","normalY","normalZ","radEffective","uHalf","vHalf","wHalf","pPrime","d","computePlaneDistances","direction","minDist","POSITIVE_INFINITY","maxDist","NEGATIVE_INFINITY","toCenter","mag","start","stop","getTransform","Plane","fromNormalDistance","fromPointNormal","fromCoefficients","getPointDistance","projectPointOntoPlane","pointDistance","scaledNormal","faces","scratchPlaneCenter","scratchPlaneNormal","scratchPlane","CullingVolume","planes","every","fromBoundingSphere","planeIndex","faceNormal","plane0","plane1","plane0Center","plane0Distance","plane1Center","negatedFaceNormal","plane1Distance","computeVisibility","boundingVolume","intersect","planeCoefficients","computeVisibilityWithPlaneMask","parentPlaneMask","MASK_OUTSIDE","MASK_INSIDE","mask","flag","scratchPlaneRightVector","scratchPlaneNearCenter","scratchPlaneFarCenter","PerspectiveOffCenterFrustum","_left","_right","_top","_bottom","_near","_far","_cullingVolume","_perspectiveMatrix","_infinitePerspective","other","computeCullingVolume","nearCenter","farCenter","getPixelDimensions","drawingBufferWidth","drawingBufferHeight","update","inverseNear","tanTheta","pixelHeight","pixelWidth","defined","val","PerspectiveFrustum","xOffset","yOffset","_offCenterFrustum","_fov","_fovy","_sseDenominator","aspectRatio","_aspectRatio","_xOffset","_yOffset","projectionMatrix","infiniteProjectionMatrix","f","fromPointsXMin","fromPointsYMin","fromPointsZMin","fromPointsXMax","fromPointsYMax","fromPointsZMax","fromPointsCurrentPos","fromPointsScratch","fromPointsRitterCenter","fromPointsMinBoxPt","fromPointsMaxBoxPt","fromPointsNaiveCenterScratch","volumeConstant","makeBoundingSphereFromPoints","currentPos","xMin","yMin","zMin","xMax","yMax","zMax","xSpan","ySpan","zSpan","diameter1","diameter2","maxSpan","ritterCenter","radiusSquared","ritterRadius","minBoxPt","maxBoxPt","naiveCenter","naiveRadius","r","oldCenterToPointSquared","oldCenterToPoint","oldToNew","cullingBench","addBenchmarks","LOG_ENTRY","GROUP","TEST","COMPLETE","parseSIPrefix","itersPerSecond","prefix","App","Bench","_logResult","bind","state","componentDidMount","calibrate","run","then","entry","error","push","formattedError","toFixed","forceUpdate","PureComponent","renderToDOM","container"],"mappings":"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","file":"component---examples-benchmarks-app-js-ba9477482d2bbb0361db.js","sourcesContent":["import React, {Component} from 'react';\n\nimport ReactTable from 'react-table';\nimport './react-table.css';\n\nfunction getPercent(score) {\n  // Log scale between 100K - 100M, 0-3\n  const logScore = Math.min(Math.max(Math.log10(score) - 5, 0), 5);\n  const percent = Math.min(Math.max(logScore * 33.3333333, 5), 100);\n  return percent;\n}\n\nconst GREEN = '#85cc00';\nconst ORANGE = '#ffbf00';\nconst RED = '#ff2e00';\n\nfunction Star() {\n  return <span style={{fontSize: '100%', color: 'yellow'}}>★</span>;\n}\n\n// eslint-disable-next-line react/prop-types\nfunction BarCell({color, percent, stars = 0, children}) {\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#dadada',\n        borderRadius: '2px'\n      }}\n    >\n      <div\n        style={{\n          width: `${percent}%`, // ` workaround chrome devtools formatting issue\n          height: '100%',\n          backgroundColor: color,\n          borderRadius: '2px',\n          transition: 'all .2s ease-out'\n        }}\n      >\n        {new Array(stars).fill(null).map((_, i) => (\n          <Star key={`${i}`} />\n        ))}\n        {children}\n      </div>\n    </div>\n  );\n}\n\n// eslint-disable-next-line react/prop-types\nfunction PerformanceBarCell({row}) {\n  const {score} = row;\n  const percent = getPercent(score);\n  // 1 star per 100M\n  const stars = Math.floor((score || 0) / 5e7);\n\n  let color = GREEN;\n  if (percent < getPercent(1e7)) {\n    color = ORANGE;\n  }\n  if (percent < getPercent(1e6)) {\n    color = RED;\n  }\n\n  return percent ? <BarCell color={color} percent={percent} stars={stars} /> : null;\n}\n\nexport default class BenchResults extends Component {\n  _renderTable() {\n    // eslint-disable-next-line react/prop-types\n    const {log} = this.props;\n    return (\n      <div>\n        <div style={{display: 'flex', height: 22}}>\n          <BarCell color={RED} percent={100}>\n            {' '}\n            &lt; 1M iterations/s\n          </BarCell>\n          <div style={{width: 20}} />\n          <BarCell color={ORANGE} percent={100}>\n            1M - 10M iterations/s\n          </BarCell>\n          <div style={{width: 20}} />\n          <BarCell color={GREEN} percent={100}>\n            &gt; 10M iterations/s\n          </BarCell>\n          <div style={{width: 20}} />\n          <BarCell color={GREEN} percent={100}>\n            <Star />\n            50M iterations/s\n          </BarCell>\n        </div>\n        <ReactTable\n          data={log}\n          columns={[\n            {\n              Header: 'Id',\n              accessor: 'id',\n              Cell: ({row}) =>\n                row.formattedValue ? (\n                  row.id\n                ) : (\n                  <h3>{row.id.replace(/@math\\.gl\\/[a-zA-Z]*: /, '')}</h3>\n                )\n            },\n            {\n              Header: 'iter/s',\n              accessor: 'formattedValue',\n              maxWidth: 85\n            },\n            {\n              Header: 'Score',\n              accessor: 'value',\n              id: 'score',\n              Cell: PerformanceBarCell,\n              maxWidth: 300\n            }\n          ]}\n          showPagination={false}\n          manual\n          className=\"-striped -highlight\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this._renderTable()}</div>;\n  }\n}\n","// CLASS INHERITANCE\n//\n// This class identifies\n\nconst IDENTITY = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nclass ClassNoConstructor {}\nclass ClassWithConstructor {\n  constructor() {\n    this.data = null;\n  }\n}\nclass ClassWithConstructorXYZ {\n  constructor() {\n    this.x = -0;\n    this.y = -0;\n    this.z = -0;\n    this.w = -0;\n  }\n}\nclass ClassWithConstructor04 {\n  constructor() {\n    this[0] = -0;\n    this[1] = -0;\n    this[2] = -0;\n    this[3] = -0;\n  }\n}\n\nclass ArrayExtenderNoConstructor extends Array {}\nclass ArrayExtenderEmptyConstructor extends Array {\n  // eslint-disable-next-line no-useless-constructor\n  constructor() {\n    super();\n  }\n}\nclass ArrayExtender extends Array {\n  constructor() {\n    super(16);\n    for (let i = 0; i < 16; i++) {\n      this[i] = IDENTITY[i];\n    }\n  }\n}\n\n// DEFAULT PARAMETERS\n\nclass XYZVector {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n}\n\nclass XYZVectorLogicalOr {\n  constructor(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n}\n\nclass XYZVectorBitwiseOr {\n  constructor(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n}\n\n// COMBINED BENCH\n\nexport default function javascriptBench(suite, addReferenceBenchmarks) {\n  if (addReferenceBenchmarks) {\n    suite\n      .group('Class/Array inheritance construction cost')\n      .add('new Array', () => new Array()) // eslint-disable-line\n      .add('new ArrayExtender', () => new ArrayExtender())\n      .add('new ArrayExtenderNoConstructor', () => new ArrayExtenderNoConstructor())\n      .add('new ArrayExtenderEmptyConstructor', () => new ArrayExtenderEmptyConstructor())\n      .add('new ClassNoConstructor', () => new ClassNoConstructor())\n      .add('new ClassWithConstructor', () => new ClassWithConstructor())\n      .add('new ClassWithConstructorXYZ', () => new ClassWithConstructorXYZ())\n      .add('new ClassWithConstructor0-4', () => new ClassWithConstructor04());\n\n    suite\n      .group('Default parameter cost')\n      .add('new XYZVector#default params', () => new XYZVector())\n      .add('new XYZVector#logical or', () => new XYZVectorLogicalOr())\n      .add('new XYZVector#bitwise or', () => new XYZVectorBitwiseOr());\n  }\n\n  return suite;\n}\n","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(`math.gl assertion ${message}`);\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport assert from './assert';\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\n/* eslint-disable no-shadow */\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\n\nexport {config};\n\nexport function configure(options = {}) {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {precision = config.precision || 4} = {}) {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n// Returns true if value is either an array or a typed array\n// Note: does not return true for ArrayBuffers and DataViews\nexport function isArray(value) {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && value.length !== undefined);\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(...array);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n    for (let i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\n\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\n\n//\n// GLSL math function equivalents\n// Works on both single values and vectors\n//\n\nexport function radians(degrees, result) {\n  return map(degrees, degrees => degrees * DEGREES_TO_RADIANS, result);\n}\n\nexport function degrees(radians, result) {\n  return map(radians, radians => radians * RADIANS_TO_DEGREES, result);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\n\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\n\n// Interpolate between two numbers or two arrays\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n  return t * b + (1 - t) * a;\n}\n\n// eslint-disable-next-line complexity\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && typeof a === 'object' && a.equals) {\n      return a.equals(b);\n    }\n    if (b && typeof b === 'object' && b.equals) {\n      return b.equals(a);\n    }\n    return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\n// eslint-disable-next-line complexity\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function withEpsilon(EPSILON, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  let value;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config, formatValue, equals, isArray} from '../../lib/common';\n\nexport default class MathArray extends Array {\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this; // eslint-disable-line\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n    return this.check();\n  }\n\n  // three.js compatibility\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  // Cesium compatibility\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  // THREE.js compatibility\n  get elements() {\n    return this;\n  }\n\n  // Debug checks\n\n  check() {\n    if (config.debug && !this.validate(this)) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config} from './common';\n\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value;\n}\n\nexport function checkVector(v, length, callerName) {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName | ''} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map = {};\n\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n","import MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nexport default class Vector extends MathArray {\n  // ACCESSORS\n\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n\n  // NOTE: `length` is a reserved word for Arrays, so we can't use `v.length()`\n  // Offer `len` and `magnitude`\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return this.len();\n  }\n\n  lengthSquared() {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  magnitudeSquared() {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize() {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  // negate() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = -this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  // inverse() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = 1 / this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n}\n","// vec2 additions\n\nexport function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\n\n// vec3 additions\n\n// Transform as vector, only uses 3x3 minor matrix\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\n\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\n\n// vec4 additions\n\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\nimport * as vec3 from 'gl-matrix/vec3';\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\n\nexport default class Vector3 extends Vector {\n  constructor(x = 0, y = 0, z = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 3;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Vector3, toRadians, radians} from 'math.gl';\nimport {isArray} from 'math.gl';\n\nconst classicArray = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nconst float32Array = new Float32Array([1, 0, 0]);\nconst float64Array = new Float64Array([1, 0, 0]);\nconst vector3 = new Vector3();\n\nexport default function commonBench(suite, addReferenceBenchmarks) {\n  suite\n    .group('@math.gl/core: Global Functions')\n    .add('isArray(Vector3)', () => isArray(vector3))\n    .add('isArray(Float32Array)', () => isArray(float32Array));\n\n  if (addReferenceBenchmarks) {\n    suite\n      .add('isArray(array)', () => isArray(classicArray))\n      .add('isArray(Float64Array)', () => isArray(float64Array));\n  }\n\n  suite\n    .add('toRadians(Number)', () => toRadians(100))\n    .add('radians(Vector3)', () => radians(vector3, vector3));\n\n  if (addReferenceBenchmarks) {\n    suite\n      .add('toRadians(array)', () => toRadians(classicArray))\n      .add('toRadians(Float32Array)', () => toRadians(float32Array))\n      .add('toRadians(Float64Array)', () => toRadians(float64Array));\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\nimport * as vec2 from 'gl-matrix/vec2';\nimport {vec2_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nexport default class Vector2 extends Vector {\n  // Creates a new, empty vec2\n  constructor(x = 0, y = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(2); // -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n\n  // Getters/setters\n  get ELEMENTS() {\n    return 2;\n  }\n\n  // x,y inherited from Vector\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  // Transforms\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec2.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec2.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3) {\n    vec2.transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec2.transformMat2(this, this, matrix2);\n    return this.check();\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Vector2} from 'math.gl';\n\nconst array = [0, 0];\nconst float32Array = new Float32Array([0, 0]);\nconst vector2 = new Vector2();\n\nexport default function vector2Bench(suite, addReferenceBenchmarks) {\n  suite\n    .group('@math.gl/core: Vector2')\n    .add('Vector2#new()', () => new Vector2(1, 2))\n    .add('Vector2#set()', () => vector2.set(1, 2))\n    .add('Vector2#copy()', () => vector2.copy([1, 2]));\n  // .add('Vector2#from(Vector2)', () => vector2.from(arrayVector))\n  // .add('Vector2#to(Vector2)', () => vector2.to(arrayVector))\n\n  if (addReferenceBenchmarks) {\n    suite\n      .group('Vector2 Type Conversion Cost')\n      .add('Vector2.from#Array', () => vector2.from(array))\n      .add('Vector2.from#Float32Array', () => vector2.from(float32Array))\n      .add('Vector2.to#Array', () => vector2.to(array))\n      .add('Vector2.to#Float32Array', () => vector2.to(float32Array));\n  }\n\n  return suite;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Vector3} from 'math.gl';\n\nclass ObjectVector {\n  constructor(x = -0, y = -0, z = -0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n}\n\nconst array = [0, 0, 0];\nconst float32Array = new Float32Array([0, 0, 0]);\nconst objectVector = new ObjectVector();\nconst arrayVector = new Vector3();\nconst vector3 = new Vector3();\n\nexport default function vector3Bench(suite, addReferenceBenchmarks) {\n  suite\n    .group('@math.gl/core: Vector3')\n    .add('Vector3#new()', () => new Vector3(1, 2, 3))\n    .add('Vector3#set()', () => vector3.set(1, 2, 3))\n    .add('Vector3#copy()', () => vector3.copy([1, 2, 3]))\n    .add('Vector3#from(Vector3)', () => vector3.from(arrayVector))\n    .add('Vector3#to(Vector3)', () => vector3.to(arrayVector));\n\n  if (addReferenceBenchmarks) {\n    suite\n      .group('Vector3 Type Conversion Cost')\n      .add('Vector3#from(Object)', () => vector3.from(objectVector))\n      .add('Vector3#to(Object)', () => vector3.to(objectVector))\n      .add('Vector3.from#Array', () => vector3.from(array))\n      .add('Vector3.from#Float32Array', () => vector3.from(float32Array))\n      .add('Vector3.to#Array', () => vector3.to(array))\n      .add('Vector3.to#Float32Array', () => vector3.to(float32Array));\n  }\n\n  return suite;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\nimport * as vec4 from 'gl-matrix/vec3';\nimport {vec4_transformMat2, vec4_transformMat3} from '../lib/gl-matrix-extras';\n\nexport default class Vector4 extends Vector {\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z, w);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 4;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    return (this[3] = checkNumber(value));\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  transform(matrix4) {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n  // three.js compatibility\n  applyMatrix4(m) {\n    m.transform(this, this);\n    return this;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Vector4} from 'math.gl';\n\nconst array = [0, 0, 0, 0];\nconst float32Array = new Float32Array([0, 0, 0, 0]);\nconst vector4 = new Vector4();\n\nexport default function vector4Bench(suite, addReferenceBenchmarks) {\n  suite\n    .group('@math.gl/core: Vector4')\n    .add('Vector4#new()', () => new Vector4(1, 2, 3, 4))\n    .add('Vector4#set()', () => vector4.set(1, 2, 3, 4))\n    .add('Vector4#copy()', () => vector4.copy([1, 2, 3, 4]));\n  // .add('Vector4#from(Vector4)', () => vector4.from(arrayVector))\n  // .add('Vector4#to(Vector4)', () => vector4.to(arrayVector))\n\n  if (addReferenceBenchmarks) {\n    suite\n      .group('Vector4 Type Conversion Cost')\n      .add('Vector4.from#Array', () => vector4.from(array))\n      .add('Vector4.from#Float32Array', () => vector4.from(float32Array))\n      .add('Vector4.to#Array', () => vector4.to(array))\n      .add('Vector4.to#Float32Array', () => vector4.to(float32Array));\n  }\n\n  return suite;\n}\n","import MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport {config} from '../../lib/common';\n\nexport default class Matrix extends MathArray {\n  // fromObject(object) {\n  //   const array = object.elements;\n  //   return this.fromRowMajor(array);\n  // }\n\n  // toObject(object) {\n  //   const array = object.elements;\n  //   this.toRowMajor(array);\n  //   return object;\n  // }\n\n  toString() {\n    let string = '[';\n    if (config.printRowMajor) {\n      string += 'row-major:';\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += ` ${this[col * this.RANK + row]}`;\n        }\n      }\n    } else {\n      string += 'column-major:';\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += ` ${this[i]}`;\n      }\n    }\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row, col) {\n    return col * this.RANK + row;\n  }\n\n  // By default assumes row major indices\n  getElement(row, col) {\n    return this[col * this.RANK + row];\n  }\n\n  // By default assumes row major indices\n  setElement(row, col, value) {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n\n  getColumn(columnIndex, result = new Array(this.RANK).fill(-0)) {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n    return result;\n  }\n\n  setColumn(columnIndex, columnVector) {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n    return this;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {checkVector, deprecated} from '../lib/validators';\nimport Matrix from './base/matrix';\n\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\n\nconst constants = {};\n\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = (2.0 * near) / (right - left);\n    const column1Row1 = (2.0 * near) / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt(eye, center, up) {\n    // Signature: lookAt({eye, center = [0, 0, 0], up = [0, 1, 0]}))\n    if (arguments.length === 1) {\n      ({eye, center, up} = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // from \"traditional\" view space parameters\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates an orthogonal projection matrix with the same parameters\n  // as a perspective matrix (plus focalDistance)\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // focalDistance distance in the view frustum used for extent calculations\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  orthographic({\n    fovy = (45 * Math.PI) / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fovy,\n    fov = (45 * Math.PI) / 180, // DEPRECATED\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  // Extracts the non-uniform scale assuming the matrix is an affine transformation.\n  // The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n  getScale(result = [-0, -0, -0]) {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  // Gets the translation portion, assuming the matrix is a affine transformation matrix.\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  // Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n  getRotation(\n    result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0],\n    scaleResult = null\n  ) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx)\n      .rotateY(ry)\n      .rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  // Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  // Transforms any 2 or 3 element array as point (w implicitly 1)\n  transformAsPoint(vector, result) {\n    const {length} = vector;\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // Transforms any 2 or 3 element array as vector (w implicitly 0)\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // three.js math API compatibility\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  // DEPRECATED in 3.0\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {configure, Vector4, Matrix4} from 'math.gl';\nimport * as mat4 from 'gl-matrix/mat4';\n\n/*\nclass CesiumMatrix4 {\n  constructor(x = -0, y = -0, z = -0) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = z;\n    this[4] = z;\n    this[5] = z;\n    this[6] = z;\n    this[7] = z;\n    this[8] = z;\n    this[9] = z;\n    this[10] = z;\n    this[11] = z;\n    this[12] = z;\n    this[13] = z;\n    this[14] = z;\n    this[15] = z;\n  }\n}\n\nfunction THREEMatrix4() {\n  this.elements = [\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1\n  ];\n}\n*/\n\nconst array = [0, 0, 0];\n// const arrayVector = new CesiumMatrix4();\n// const objectVector = new THREEMatrix4();\nconst matrix4 = new Matrix4();\n\nconst IDENTITY = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nconst classicArray = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nconst float32Array = new Float32Array([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst float64Array = new Float64Array([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\nconst mathglVector4 = new Vector4();\nconst dirVector4 = new Vector4(0, 0, 0, 0);\nconst pointVector4 = new Vector4(0, 0, 0, 1);\nconst vector3 = [0, 0, 0];\n\nexport default function matrix4Bench(suite, addReferenceBenchmarks) {\n  suite\n    // add tests\n    .group('@math.gl/core: Matrix4 constructors')\n    .add('Matrix4#new Matrix4()', () => configure({debug: false}), () => new Matrix4())\n    .add('Matrix4#new Matrix4(debug)', () => configure({debug: true}), () => new Matrix4())\n    .add('Matrix4#copy()', () => configure({debug: false}), () => matrix4.copy(IDENTITY))\n    .add('Matrix4#copy(debug)', () => configure({debug: true}), () => matrix4.copy(IDENTITY))\n    .add(\n      'Matrix4#set()',\n      () => configure({debug: false}),\n      () => matrix4.set(1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    )\n    .add('Matrix4#setRowMajor()', () =>\n      matrix4.setRowMajor(1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    )\n    .add('Matrix4#identity', () => matrix4.identity())\n    .add('Matrix4#fromQuaternion', () => matrix4.fromQuaternion([1, 1, 1, 1]));\n  // .add('Matrix4#from(Matrix4)', () => matrix4.from(arrayVector))\n  // .add('Matrix4#from(Object)', () => matrix4.from(objectVector))\n  // .add('Matrix4#to(Matrix4)', () => matrix4.to(arrayVector))\n  // .add('Matrix4#to(Object)', () => matrix4.to(objectVector));\n\n  if (addReferenceBenchmarks) {\n    suite\n      .add('Array(16)', () => new Array(16))\n      .add('[1, 0, 0, 0, ...]', () => [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1])\n      .add('new Float32Array(16)', () => new Float32Array(16))\n      .add('new Float32Array(IDENTITY)', () => new Float32Array(IDENTITY))\n      .add('new Float64Array(16)', () => new Float64Array(16))\n      .add('new Float64Array(IDENTITY)', () => new Float64Array(IDENTITY));\n  }\n\n  if (addReferenceBenchmarks) {\n    suite\n      .add('Matrix4#from(Array)', () => matrix4.from(array))\n      .add('Matrix4#from(Float32Array)', () => matrix4.from(float32Array))\n      .add('Matrix4#to(Array)', () => matrix4.to(array))\n      .add('Matrix4#to(Float32Array)', () => matrix4.to(float32Array));\n    // .group('debug validation cost')\n    // .add('Matrix4#validate (debug)', () => configure({debug: true}), () => matrix4.check())\n    // .add('Matrix4#validate ', () => configure({debug: false}), () => matrix4.check())\n  }\n\n  suite\n    .group('@math.gl/core: Matrix4 Multiplication')\n    .add('Matrix4#multiplyRight(Matrix4)', () => matrix4.multiplyRight(matrix4))\n    .add('gl-matrix#multiply(Matrix4)', () => mat4.multiply(matrix4, matrix4, matrix4))\n    .add('Matrix4#transform(dir4)', () => matrix4.transform(dirVector4, mathglVector4))\n    .add('Matrix4#transform(point4)', () => matrix4.transform(pointVector4, mathglVector4))\n    .add('Matrix4#transformAsVector(v3)', () => matrix4.transformAsVector(vector3, vector3))\n    .add('Matrix4#transformAsPoint(v3)', () => matrix4.transformAsVector(vector3, vector3));\n\n  suite\n    .group('@math.gl/core: Matrix4 accessors')\n    .add('Matrix4#determinant()', () => matrix4.determinant())\n    .add('Matrix4#getScale()', () => matrix4.getScale())\n    .add('Matrix4#getTranslation()', () => matrix4.getTranslation())\n    .add('Matrix4#getRotation()', () => matrix4.getRotation());\n\n  suite\n    .group('@math.gl/core: Matrix4 operations')\n    .add('Matrix4#transpose()', () => matrix4.transpose())\n    .add('Matrix4#invert()', () => matrix4.invert())\n\n    .add('Matrix4#scale()', () => matrix4.scale(2))\n    .add('Matrix4#translate()', () => matrix4.translate([1, 1, 1]));\n\n  if (addReferenceBenchmarks) {\n    suite\n      .add('gl-matrix#multiply(array)', () =>\n        mat4.multiply(classicArray, classicArray, classicArray)\n      )\n      .add('gl-matrix#multiply(float32Array)', () =>\n        mat4.multiply(float32Array, float32Array, float32Array)\n      )\n      .add('gl-matrix#multiply(float64Array)', () =>\n        mat4.multiply(float64Array, float64Array, float64Array)\n      );\n  }\n\n  return suite;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport javascriptBench from './lib/javascript.bench';\nimport commonBench from './lib/common.bench';\n\n// import classesBench from './classes/classes.bench';\nimport vector2Bench from './classes/vector2.bench';\nimport vector3Bench from './classes/vector3.bench';\nimport vector4Bench from './classes/vector4.bench';\nimport matrix4Bench from './classes/matrix4.bench';\n\nexport default function coreBench(suite, addReferenceBenchmarks) {\n  // classesBench(suite, addReferenceBenchmarks);\n  commonBench(suite, addReferenceBenchmarks);\n  javascriptBench(suite, addReferenceBenchmarks);\n\n  matrix4Bench(suite, addReferenceBenchmarks);\n\n  vector2Bench(suite, addReferenceBenchmarks);\n  vector3Bench(suite, addReferenceBenchmarks);\n  vector4Bench(suite, addReferenceBenchmarks);\n\n  return suite;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nexport const WGS84_RADIUS_X = 6378137.0;\nexport const WGS84_RADIUS_Y = 6378137.0;\nexport const WGS84_RADIUS_Z = 6356752.3142451793;\n\n// Pre-calculated ellipsoid defaults to avoid utils depending on `ellipsoid.js`\n\nexport const WGS84_CONSTANTS = {\n  radii: [WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z],\n  radiiSquared: [\n    WGS84_RADIUS_X * WGS84_RADIUS_X,\n    WGS84_RADIUS_Y * WGS84_RADIUS_Y,\n    WGS84_RADIUS_Z * WGS84_RADIUS_Z\n  ],\n  oneOverRadii: [1.0 / WGS84_RADIUS_X, 1.0 / WGS84_RADIUS_Y, 1.0 / WGS84_RADIUS_Z],\n  oneOverRadiiSquared: [\n    1.0 / (WGS84_RADIUS_X * WGS84_RADIUS_X),\n    1.0 / (WGS84_RADIUS_Y * WGS84_RADIUS_Y),\n    1.0 / (WGS84_RADIUS_Z * WGS84_RADIUS_Z)\n  ],\n  maximumRadius: Math.max(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z),\n  centerToleranceSquared: 1e-1 // EPSILON1;\n};\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, isArray, toRadians, toDegrees, config} from 'math.gl';\nimport {WGS84_CONSTANTS} from './constants';\n\nconst noop = x => x;\n\nconst scratchVector = new Vector3();\n\nexport function fromCartographic(cartographic, vector, map = noop) {\n  if (isArray(cartographic)) {\n    vector[0] = map(cartographic[0]);\n    vector[1] = map(cartographic[1]);\n    vector[2] = cartographic[2];\n  } else if ('longitude' in cartographic) {\n    vector[0] = map(cartographic.longitude);\n    vector[1] = map(cartographic.latitude);\n    vector[2] = cartographic.height;\n  } else {\n    vector[0] = map(cartographic.x);\n    vector[1] = map(cartographic.y);\n    vector[2] = cartographic.z;\n  }\n  return vector;\n}\n\nexport function fromCartographicToRadians(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config.cartographicRadians ? noop : toRadians);\n}\n\nexport function fromCartographicToDegrees(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config.cartographicRadians ? toDegrees : noop);\n}\n\nexport function toCartographic(vector, cartographic, map = noop) {\n  if (isArray(cartographic)) {\n    cartographic[0] = map(vector[0]);\n    cartographic[1] = map(vector[1]);\n    cartographic[2] = vector[2];\n  } else if ('longitude' in cartographic) {\n    cartographic.longitude = map(vector[0]);\n    cartographic.latitude = map(vector[1]);\n    cartographic.height = vector[2];\n  } else {\n    cartographic.x = map(vector[0]);\n    cartographic.y = map(vector[1]);\n    cartographic.z = vector[2];\n  }\n  return cartographic;\n}\n\nexport function toCartographicFromRadians(vector, cartographic) {\n  return toCartographic(vector, cartographic, config.cartographicRadians ? noop : toDegrees);\n}\n\nexport function toCartographicFromDegrees(vector, cartographic) {\n  return toCartographic(vector, cartographic, config.cartographicRadians ? toRadians : noop);\n}\n\nexport function isWGS84(vector) {\n  if (!vector) {\n    return false;\n  }\n  scratchVector.from(vector);\n  const {oneOverRadiiSquared, centerToleranceSquared} = WGS84_CONSTANTS;\n  const x2 = vector[0] * vector[0] * oneOverRadiiSquared[0];\n  const y2 = vector[1] * vector[1] * oneOverRadiiSquared[1];\n  const z2 = vector[2] * vector[2] * oneOverRadiiSquared[2];\n  return Math.abs(x2 + y2 + z2 - 1) < centerToleranceSquared;\n}\n","// NOTE: Added to make Cesium-derived test cases work\n// TODO: Determine if/how to keep\nexport default {\n  EPSILON1: 1e-1,\n  EPSILON2: 1e-2,\n  EPSILON3: 1e-3,\n  EPSILON4: 1e-4,\n  EPSILON5: 1e-5,\n  EPSILON6: 1e-6,\n  EPSILON7: 1e-7,\n  EPSILON8: 1e-8,\n  EPSILON9: 1e-9,\n  EPSILON10: 1e-10,\n  EPSILON11: 1e-11,\n  EPSILON12: 1e-12,\n  EPSILON13: 1e-13,\n  EPSILON14: 1e-14,\n  EPSILON15: 1e-15,\n  EPSILON16: 1e-16,\n  EPSILON17: 1e-17,\n  EPSILON18: 1e-18,\n  EPSILON19: 1e-19,\n  EPSILON20: 1e-20,\n\n  PI_OVER_TWO: Math.PI / 2,\n  PI_OVER_FOUR: Math.PI / 4,\n  PI_OVER_SIX: Math.PI / 6,\n\n  TWO_PI: Math.PI * 2\n};\n","/* eslint-disable */\nimport {Vector3, assert, _MathUtils} from 'math.gl';\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst scratchVector = new Vector3();\nconst scaleToGeodeticSurfaceIntersection = new Vector3();\nconst scaleToGeodeticSurfaceGradient = new Vector3();\n\n// Scales the provided Cartesian position along the geodetic surface normal\n// so that it is on the surface of this ellipsoid.  If the position is\n// at the center of the ellipsoid, this function returns undefined.\nexport default function scaleToGeodeticSurface(cartesian, ellipsoid, result = new Vector3()) {\n  const {oneOverRadii, oneOverRadiiSquared, centerToleranceSquared} = ellipsoid;\n\n  scratchVector.from(cartesian);\n\n  const positionX = cartesian.x;\n  const positionY = cartesian.y;\n  const positionZ = cartesian.z;\n\n  const oneOverRadiiX = oneOverRadii.x;\n  const oneOverRadiiY = oneOverRadii.y;\n  const oneOverRadiiZ = oneOverRadii.z;\n\n  const x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\n  const y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\n  const z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\n\n  // Compute the squared ellipsoid norm.\n  const squaredNorm = x2 + y2 + z2;\n  const ratio = Math.sqrt(1.0 / squaredNorm);\n\n  // When very close to center or at center\n  if (!Number.isFinite(ratio)) {\n    return undefined;\n  }\n\n  // As an initial approximation, assume that the radial intersection is the projection point.\n  const intersection = scaleToGeodeticSurfaceIntersection;\n  intersection.copy(cartesian).scale(ratio);\n\n  // If the position is near the center, the iteration will not converge.\n  if (squaredNorm < centerToleranceSquared) {\n    return intersection.to(result);\n  }\n\n  const oneOverRadiiSquaredX = oneOverRadiiSquared.x;\n  const oneOverRadiiSquaredY = oneOverRadiiSquared.y;\n  const oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\n\n  // Use the gradient at the intersection point in place of the true unit normal.\n  // The difference in magnitude will be absorbed in the multiplier.\n  const gradient = scaleToGeodeticSurfaceGradient;\n  gradient.set(\n    intersection.x * oneOverRadiiSquaredX * 2.0,\n    intersection.y * oneOverRadiiSquaredY * 2.0,\n    intersection.z * oneOverRadiiSquaredZ * 2.0\n  );\n\n  // Compute the initial guess at the normal vector multiplier, lambda.\n  let lambda = ((1.0 - ratio) * cartesian.len()) / (0.5 * gradient.len());\n  let correction = 0.0;\n\n  let xMultiplier;\n  let yMultiplier;\n  let zMultiplier;\n  let func;\n\n  do {\n    lambda -= correction;\n\n    xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\n    yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\n    zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\n\n    const xMultiplier2 = xMultiplier * xMultiplier;\n    const yMultiplier2 = yMultiplier * yMultiplier;\n    const zMultiplier2 = zMultiplier * zMultiplier;\n\n    const xMultiplier3 = xMultiplier2 * xMultiplier;\n    const yMultiplier3 = yMultiplier2 * yMultiplier;\n    const zMultiplier3 = zMultiplier2 * zMultiplier;\n\n    func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\n\n    // \"denominator\" here refers to the use of this expression in the velocity and acceleration\n    // computations in the sections to follow.\n    const denominator =\n      x2 * xMultiplier3 * oneOverRadiiSquaredX +\n      y2 * yMultiplier3 * oneOverRadiiSquaredY +\n      z2 * zMultiplier3 * oneOverRadiiSquaredZ;\n\n    const derivative = -2.0 * denominator;\n\n    correction = func / derivative;\n  } while (Math.abs(func) > _MathUtils.EPSILON12);\n\n  return scratchVector.scale([xMultiplier, yMultiplier, zMultiplier]).to(result);\n}\n","import {Vector3, assert, equals as equalsEpsilon} from 'math.gl';\n\nconst EPSILON14 = 1e-14;\n\nconst scratchOrigin = new Vector3();\n\n// Caclulate third axis from given two axii\nconst VECTOR_PRODUCT_LOCAL_FRAME = {\n  up: {\n    south: 'east',\n    north: 'west',\n    west: 'south',\n    east: 'north'\n  },\n  down: {\n    south: 'west',\n    north: 'east',\n    west: 'north',\n    east: 'south'\n  },\n  south: {\n    up: 'west',\n    down: 'east',\n    west: 'down',\n    east: 'up'\n  },\n  north: {\n    up: 'east',\n    down: 'west',\n    west: 'up',\n    east: 'down'\n  },\n  west: {\n    up: 'north',\n    down: 'south',\n    north: 'down',\n    south: 'up'\n  },\n  east: {\n    up: 'south',\n    down: 'north',\n    north: 'up',\n    south: 'down'\n  }\n};\n\nconst degeneratePositionLocalFrame = {\n  north: [-1, 0, 0],\n  east: [0, 1, 0],\n  up: [0, 0, 1],\n  south: [1, 0, 0],\n  west: [0, -1, 0],\n  down: [0, 0, -1]\n};\n\nconst scratchAxisVectors = {\n  east: new Vector3(),\n  north: new Vector3(),\n  up: new Vector3(),\n  west: new Vector3(),\n  south: new Vector3(),\n  down: new Vector3()\n};\n\nconst scratchVector1 = new Vector3();\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\n\n// Computes a 4x4 transformation matrix from a reference frame\n// centered at the provided origin to the provided ellipsoid's fixed reference frame.\n// eslint-disable-next-line max-statements, max-params, complexity\nexport default function localFrameToFixedFrame(\n  ellipsoid,\n  firstAxis,\n  secondAxis,\n  thirdAxis,\n  cartesianOrigin,\n  result\n) {\n  const thirdAxisInferred =\n    VECTOR_PRODUCT_LOCAL_FRAME[firstAxis] && VECTOR_PRODUCT_LOCAL_FRAME[firstAxis][secondAxis];\n  // firstAxis and secondAxis must be east, north, up, west, south or down.');\n  assert(thirdAxisInferred && (!thirdAxis || thirdAxis === thirdAxisInferred));\n\n  let firstAxisVector;\n  let secondAxisVector;\n  let thirdAxisVector;\n\n  const origin = scratchOrigin.copy(cartesianOrigin);\n\n  // If x and y are zero, assume origin is at a pole, which is a special case.\n  const atPole = equalsEpsilon(origin.x, 0.0, EPSILON14) && equalsEpsilon(origin.y, 0.0, EPSILON14);\n\n  if (atPole) {\n    // Look up axis value and adjust\n    const sign = Math.sign(origin.z);\n\n    firstAxisVector = scratchVector1.fromArray(degeneratePositionLocalFrame[firstAxis]);\n    if (firstAxis !== 'east' && firstAxis !== 'west') {\n      firstAxisVector.scale(sign);\n    }\n\n    secondAxisVector = scratchVector2.fromArray(degeneratePositionLocalFrame[secondAxis]);\n    if (secondAxis !== 'east' && secondAxis !== 'west') {\n      secondAxisVector.scale(sign);\n    }\n\n    thirdAxisVector = scratchVector3.fromArray(degeneratePositionLocalFrame[thirdAxis]);\n    if (thirdAxis !== 'east' && thirdAxis !== 'west') {\n      thirdAxisVector.scale(sign);\n    }\n  } else {\n    // Calculate all axis\n    const {up, east, north} = scratchAxisVectors;\n\n    east.set(-origin.y, origin.x, 0.0).normalize();\n    ellipsoid.geodeticSurfaceNormal(origin, up);\n    north.copy(up).cross(east);\n\n    const {down, west, south} = scratchAxisVectors;\n\n    down.copy(up).scale(-1);\n    west.copy(east).scale(-1);\n    south.copy(north).scale(-1);\n\n    // Pick three axis based on desired orientation\n    firstAxisVector = scratchAxisVectors[firstAxis];\n    secondAxisVector = scratchAxisVectors[secondAxis];\n    thirdAxisVector = scratchAxisVectors[thirdAxis];\n  }\n\n  // TODO - assuming the result is column-major\n  result[0] = firstAxisVector.x;\n  result[1] = firstAxisVector.y;\n  result[2] = firstAxisVector.z;\n  result[3] = 0.0;\n  result[4] = secondAxisVector.x;\n  result[5] = secondAxisVector.y;\n  result[6] = secondAxisVector.z;\n  result[7] = 0.0;\n  result[8] = thirdAxisVector.x;\n  result[9] = thirdAxisVector.y;\n  result[10] = thirdAxisVector.z;\n  result[11] = 0.0;\n  result[12] = origin.x;\n  result[13] = origin.y;\n  result[14] = origin.z;\n  result[15] = 1.0;\n  return result;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, Matrix4, toRadians, toDegrees, assert, equals, _MathUtils} from 'math.gl';\nimport * as vec3 from 'gl-matrix/vec3';\n\nimport {WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z} from '../constants';\nimport {fromCartographicToRadians, toCartographicFromRadians} from '../type-utils';\n\nimport scaleToGeodeticSurface from './helpers/scale-to-geodetic-surface';\nimport localFrameToFixedFrame from './helpers/ellipsoid-transform';\n\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nconst scratchK = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchHeight = new Vector3();\nconst scratchCartesian = new Vector3();\n\nlet wgs84;\n\n// A quadratic surface defined in Cartesian coordinates by the equation\n// <code>(x / a)^2 + (y / b)^2 + (z / c)^2 = 1</code>.  Primarily used\n// to represent the shape of planetary bodies.\nexport default class Ellipsoid {\n  // An Ellipsoid instance initialized to the WGS84 standard.\n  static get WGS84() {\n    wgs84 = wgs84 || new Ellipsoid(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z);\n    return wgs84;\n  }\n\n  // Creates an Ellipsoid from a Cartesian specifying the radii in x, y, and z directions.\n  constructor(x = 0.0, y = 0.0, z = 0.0) {\n    assert(x >= 0.0);\n    assert(y >= 0.0);\n    assert(z >= 0.0);\n\n    this.radii = new Vector3(x, y, z);\n\n    this.radiiSquared = new Vector3(x * x, y * y, z * z);\n\n    this.radiiToTheFourth = new Vector3(x * x * x * x, y * y * y * y, z * z * z * z);\n\n    this.oneOverRadii = new Vector3(\n      x === 0.0 ? 0.0 : 1.0 / x,\n      y === 0.0 ? 0.0 : 1.0 / y,\n      z === 0.0 ? 0.0 : 1.0 / z\n    );\n\n    this.oneOverRadiiSquared = new Vector3(\n      x === 0.0 ? 0.0 : 1.0 / (x * x),\n      y === 0.0 ? 0.0 : 1.0 / (y * y),\n      z === 0.0 ? 0.0 : 1.0 / (z * z)\n    );\n\n    this.minimumRadius = Math.min(x, y, z);\n\n    this.maximumRadius = Math.max(x, y, z);\n\n    this.centerToleranceSquared = _MathUtils.EPSILON1;\n\n    if (this.radiiSquared.z !== 0) {\n      this.squaredXOverSquaredZ = this.radiiSquared.x / this.radiiSquared.z;\n    }\n\n    Object.freeze(this);\n  }\n\n  // Compares this Ellipsoid against the provided Ellipsoid componentwise and returns\n  equals(right) {\n    return this === right || Boolean(right && this.radii.equals(right.radii));\n  }\n\n  // Creates a string representing this Ellipsoid in the format '(radii.x, radii.y, radii.z)'.\n  toString() {\n    return this.radii.toString();\n  }\n\n  // Converts the provided cartographic to Cartesian representation.\n  cartographicToCartesian(cartographic, result = [0, 0, 0]) {\n    const normal = scratchNormal;\n    const k = scratchK;\n\n    const [, , height] = cartographic;\n    this.geodeticSurfaceNormalCartographic(cartographic, normal);\n    k.copy(this.radiiSquared).scale(normal);\n\n    const gamma = Math.sqrt(normal.dot(k));\n    k.scale(1 / gamma);\n\n    normal.scale(height);\n\n    k.add(normal);\n\n    return k.to(result);\n  }\n\n  // Converts the provided cartesian to cartographic (lng/lat/z) representation.\n  // The cartesian is undefined at the center of the ellipsoid.\n  cartesianToCartographic(cartesian, result = [0, 0, 0]) {\n    scratchCartesian.from(cartesian);\n    const point = this.scaleToGeodeticSurface(scratchCartesian, scratchPosition);\n\n    if (!point) {\n      return undefined;\n    }\n\n    const normal = this.geodeticSurfaceNormal(point, scratchNormal);\n\n    const h = scratchHeight;\n    h.copy(scratchCartesian).subtract(point);\n\n    const longitude = Math.atan2(normal.y, normal.x);\n    const latitude = Math.asin(normal.z);\n    const height = Math.sign(vec3.dot(h, scratchCartesian)) * vec3.length(h);\n\n    return toCartographicFromRadians([longitude, latitude, height], result);\n  }\n\n  // Computes a 4x4 transformation matrix from a reference frame with an east-north-up axes\n  // centered at the provided origin to the provided ellipsoid's fixed reference frame.\n  eastNorthUpToFixedFrame(origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, 'east', 'north', 'up', origin, result);\n  }\n\n  // Computes a 4x4 transformation matrix from a reference frame centered at\n  // the provided origin to the ellipsoid's fixed reference frame.\n  localFrameToFixedFrame(firstAxis, secondAxis, thirdAxis, origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, firstAxis, secondAxis, thirdAxis, origin, result);\n  }\n\n  // Computes the unit vector directed from the center of this ellipsoid toward\n  // the provided Cartesian position.\n  geocentricSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector\n      .from(cartesian)\n      .normalize()\n      .to(result);\n  }\n\n  // Computes the normal of the plane tangent to the surface of the ellipsoid at provided position.\n  geodeticSurfaceNormalCartographic(cartographic, result = [0, 0, 0]) {\n    const cartographicVectorRadians = fromCartographicToRadians(cartographic);\n\n    const longitude = cartographicVectorRadians[0];\n    const latitude = cartographicVectorRadians[1];\n\n    const cosLatitude = Math.cos(latitude);\n\n    scratchVector\n      .set(cosLatitude * Math.cos(longitude), cosLatitude * Math.sin(longitude), Math.sin(latitude))\n      .normalize();\n\n    return scratchVector.to(result);\n  }\n\n  // Computes the normal of the plane tangent to the surface of the ellipsoid at the provided position.\n  geodeticSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector\n      .from(cartesian)\n      .scale(this.oneOverRadiiSquared)\n      .normalize()\n      .to(result);\n  }\n\n  // Scales the provided Cartesian position along the geodetic surface normal\n  // so that it is on the surface of this ellipsoid.  If the position is\n  // at the center of the ellipsoid, this function returns undefined.\n  scaleToGeodeticSurface(cartesian, result) {\n    return scaleToGeodeticSurface(cartesian, this, result);\n  }\n\n  // Scales the provided Cartesian position along the geocentric surface normal\n  // so that it is on the surface of this ellipsoid.\n  scaleToGeocentricSurface(cartesian, result = [0, 0, 0]) {\n    scratchPosition.from(cartesian);\n\n    const positionX = scratchPosition.x;\n    const positionY = scratchPosition.y;\n    const positionZ = scratchPosition.z;\n    const oneOverRadiiSquared = this.oneOverRadiiSquared;\n\n    const beta =\n      1.0 /\n      Math.sqrt(\n        positionX * positionX * oneOverRadiiSquared.x +\n          positionY * positionY * oneOverRadiiSquared.y +\n          positionZ * positionZ * oneOverRadiiSquared.z\n      );\n\n    return scratchPosition.multiplyScalar(beta).to(result);\n  }\n\n  // Transforms a Cartesian X, Y, Z position to the ellipsoid-scaled space by multiplying\n  // its components by the result of `Ellipsoid#oneOverRadii`\n  transformPositionToScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition\n      .from(position)\n      .scale(this.oneOverRadii)\n      .to(result);\n  }\n\n  // Transforms a Cartesian X, Y, Z position from the ellipsoid-scaled space by multiplying\n  // its components by the result of `Ellipsoid#radii`.\n  transformPositionFromScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition\n      .from(position)\n      .scale(this.radii)\n      .to(result);\n  }\n\n  // Computes a point which is the intersection of the surface normal with the z-axis.\n  getSurfaceNormalIntersectionWithZAxis(position, buffer = 0.0, result = [0, 0, 0]) {\n    // Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)\n    assert(equals(this.radii.x, this.radii.y, _MathUtils.EPSILON15));\n    assert(this.radii.z > 0);\n\n    scratchPosition.from(position);\n    const z = scratchPosition.z * (1 - this.squaredXOverSquaredZ);\n\n    if (Math.abs(z) >= this.radii.z - buffer) {\n      return undefined;\n    }\n\n    return scratchPosition.set(0.0, 0.0, z).to(result);\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix4} from 'math.gl';\nimport {Ellipsoid} from '@math.gl/geospatial';\n// import {externalVector3ToArray, setExternalVector3} from '@math.gl/geospatial/type-utils';\n// import * as vec3 from 'gl-matrix/vec3';\n\nconst ellipsoid = Ellipsoid.WGS84;\nconst spaceCartesian = new Vector3(4582719.8827300891, -4582719.8827300882, 1725510.4250797231);\nconst spaceCartographic = new Vector3(-45.0, 15.0, 330000.0);\n// const spaceCartographicObject = {x: -45.0, y: 15.0, z: 330000.0};\nconst resultVector = new Vector3();\n// const resultArray = [0, 0, 0];\n// const resultObject = {x: 0, y: 0, z: 0};\n\nconst origin = new Vector3(1.0, 0.0, 0.0);\n// const northPole = new Vector3(0.0, 0.0, 1.0);\nconst resultMatrix = new Matrix4();\n\nexport default function ellipsoidBench(suite) {\n  // const spaceCartesian = new Vector3(4582719.8827300891, -4582719.8827300882, 1725510.4250797231);\n\n  suite\n    .group('@math.gl/geospatial Ellipsoid')\n    .add('#cartographicToCartesian(=>Vector3)', () =>\n      ellipsoid.cartographicToCartesian(spaceCartographic, resultVector)\n    )\n    .add('#cartesianToCartographic(=>Vector3)', () =>\n      ellipsoid.cartesianToCartographic(spaceCartesian, resultVector)\n    )\n    .add('#eastNorthUpToFixedFrame()', () =>\n      Ellipsoid.WGS84.eastNorthUpToFixedFrame(origin, resultMatrix)\n    )\n    // .add('#eastNorthUpToFixedFrame(Pole)', () =>\n    //   Ellipsoid.WGS84.eastNorthUpToFixedFrame(northPole, resultMatrix)\n    // )\n\n    // .add('#cartographicToCartesian(=>Object)', () =>\n    //   ellipsoid.cartographicToCartesian(spaceCartographic, resultObject)\n    // )\n    // .add('#geodSurfNormalCarto(=>Object)', () =>\n    //   ellipsoid.geodeticSurfaceNormalCartographic(spaceCartographicObject, resultObject)\n    // )\n\n    .add('#geodSurfNormal(=>Vector3)', () =>\n      ellipsoid.geodeticSurfaceNormalCartographic(spaceCartographic, resultVector)\n    )\n    // .add('#geodSurfNormalCarto() Opt', () =>\n    //   geodeticSurfaceNormalCartographicOptimized(spaceCartographic, resultArray)\n    // )\n\n    .add('#geodeticSurfaceNormal(=>Vector3)', () =>\n      ellipsoid.geodeticSurfaceNormal(spaceCartesian, resultVector)\n    )\n\n    .add('#scaleToGeocentricSurface(=>Vector3)', () =>\n      ellipsoid.scaleToGeocentricSurface(spaceCartesian, resultVector)\n    );\n  // .add('#scaleToGeocentricSurface(=>Object)', () =>\n  //   ellipsoid.scaleToGeocentricSurface(spaceCartesian, resultObject)\n  // )\n\n  return suite;\n}\n\n/*\n// Hand optimized version of Ellipsoid.geodeticSurfaceNormalCartographic\n// Computes the normal of the plane tangent to the surface of the ellipsoid at provided position.\nfunction geodeticSurfaceNormalCartographicOptimized(cartographic, result = new Vector3()) {\n  // const longitude = cartographic.longitude;\n  // const latitude = cartographic.latitude;\n\n  // const longitude = toRadians(cartographic[0]);\n  // const latitude = toRadians(cartographic[1]);\n  const longitude = cartographic[0];\n  const latitude = cartographic[1];\n\n  const cosLatitude = Math.cos(latitude);\n\n  const x = cosLatitude * Math.cos(longitude);\n  const y = cosLatitude * Math.sin(longitude);\n  const z = Math.sin(latitude);\n\n  result.x = x;\n  result.y = y;\n  result.z = z;\n\n  return vec3.normalize(result, result);\n}\n*/\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3} from 'math.gl';\nimport {\n  fromCartographic,\n  fromCartographicToRadians,\n  toCartographicFromRadians\n} from '../src/type-utils';\n\nimport ellipsoidBench from '@math.gl/geospatial/test/ellipsoid/ellipsoid.bench';\n\nclass ObjectVector {\n  constructor(x = 0, y = 0, z = 0) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n}\n\nconst array = [0, 0, 0];\nconst float32Array = new Float32Array([0, 0, 0]);\nconst objectVector = new ObjectVector();\nconst vector = new Vector3();\nconst vector3 = new Vector3();\n\nexport default function geospatialBench(suite, addReferenceBenchmarks) {\n  suite\n    .group('Cartographic Type Conversion Cost')\n    .add('fromCartographic#Vector3', () => fromCartographic(vector3, vector))\n    .add('fromCartographicToRadians#Vector3', () => fromCartographicToRadians(vector3, vector))\n    .add('toCartographicFromRadians#Vector3', () => toCartographicFromRadians(vector3, vector));\n\n  if (addReferenceBenchmarks) {\n    suite\n      .add('fromCartographicToRadians#Object', () =>\n        fromCartographicToRadians(vector3, objectVector)\n      )\n      .add('toCartographicFromRadians#Object', () =>\n        toCartographicFromRadians(vector3, objectVector)\n      )\n      .add('fromCartographicToRadians#Array', () => fromCartographicToRadians(vector3, array))\n      .add('fromCartographicToRadians#Float32Array', () =>\n        fromCartographicToRadians(vector3, float32Array)\n      )\n      .add('toCartographicFromRadians#Array', () => toCartographicFromRadians(vector3, array))\n      .add('toCartographicFromRadians#Float32Array', () =>\n        toCartographicFromRadians(vector3, float32Array)\n      );\n  }\n\n  ellipsoidBench(suite);\n\n  return suite;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nexport const INTERSECT = Object.freeze({\n  OUTSIDE: -1, // Represents that an object is not contained within the frustum.\n  INTERSECTING: 0, // Represents that an object intersects one of the frustum's planes.\n  INSIDE: 1 // Represents that an object is fully within the frustum.\n});\n\nexport const Intersect = INTERSECT;\n","import {Vector3} from 'math.gl';\nimport {Intersect} from '../constants';\n\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\n\n/**\n * Creates an instance of an AxisAlignedBoundingBox from the minimum and maximum points along the x, y, and z axes.\n * @alias AxisAlignedBoundingBox\n * @constructor\n *\n * @param {Vector3} [minimum=0, 0, 0] The minimum point along the x, y, and z axes.\n * @param {Vector3} [maximum=0, 0, 0] The maximum point along the x, y, and z axes.\n * @param {Vector3} [center] The center of the box; automatically computed if not supplied.\n *\n * @see BoundingSphere\n * @see BoundingRectangle\n */\nexport default class AxisAlignedBoundingBox {\n  constructor(minimum = [0, 0, 0], maximum = [0, 0, 0], center = null) {\n    // If center was not defined, compute it.\n    center =\n      center ||\n      scratchVector\n        .copy(minimum)\n        .add(maximum)\n        .scale(0.5);\n\n    /**\n     * The minimum point defining the bounding box.\n     * @type {Vector3}\n     * @default {@link 0, 0, 0}\n     */\n    this.minimum = new Vector3(minimum);\n\n    /**\n     * The maximum point defining the bounding box.\n     * @type {Vector3}\n     * @default {@link 0, 0, 0}\n     */\n    this.maximum = new Vector3(maximum);\n\n    /**\n     * The center point of the bounding box.\n     * @type {Vector3}\n     */\n    this.center = new Vector3(center);\n  }\n\n  /**\n   * Computes an instance of an AxisAlignedBoundingBox. The box is determined by\n   * finding the points spaced the farthest apart on the x, y, and z axes.\n   *\n   * @param {Vector3[]} positions List of points that the bounding box will enclose.  Each point must have a <code>x</code>, <code>y</code>, and <code>z</code> properties.\n   * @param {AxisAlignedBoundingBox} [result] The object onto which to store the result.\n   * @returns {AxisAlignedBoundingBox} The modified result parameter or a new AxisAlignedBoundingBox instance if one was not provided.\n   *\n   * @example\n   * // Compute an axis aligned bounding box enclosing two points.\n   * const box = Cesium.AxisAlignedBoundingBox.fromPoints([new Cesium.Vector3(2, 0, 0), new Cesium.Vector3(-2, 0, 0)]);\n   */\n  // eslint-disable-next-line\n  fromPoints(positions) {\n    if (!positions || positions.length === 0) {\n      this.minimum.set(0, 0, 0);\n      this.maximum.set(0, 0, 0);\n      this.center.set(0, 0, 0);\n      return this;\n    }\n\n    let minimumX = positions[0][0];\n    let minimumY = positions[0][1];\n    let minimumZ = positions[0][2];\n\n    let maximumX = positions[0][0];\n    let maximumY = positions[0][1];\n    let maximumZ = positions[0][2];\n\n    for (const p of positions) {\n      const x = p[0];\n      const y = p[1];\n      const z = p[2];\n\n      minimumX = Math.min(x, minimumX);\n      maximumX = Math.max(x, maximumX);\n      minimumY = Math.min(y, minimumY);\n      maximumY = Math.max(y, maximumY);\n      minimumZ = Math.min(z, minimumZ);\n      maximumZ = Math.max(z, maximumZ);\n    }\n\n    this.minimum.set(minimumX, minimumY, minimumZ);\n    this.maximum.set(maximumX, maximumY, maximumZ);\n    this.center\n      .copy(this.minimum)\n      .add(this.maximum)\n      .scale(0.5);\n\n    return this;\n  }\n\n  /**\n   * Duplicates a AxisAlignedBoundingBox instance.\n   *\n   * @returns {AxisAlignedBoundingBox} A new AxisAlignedBoundingBox instance.\n   */\n  clone() {\n    return new AxisAlignedBoundingBox(this.minimum, this.maximum, this.center);\n  }\n\n  /**\n   * Compares the provided AxisAlignedBoundingBox componentwise and returns\n   * <code>true</code> if they are equal, <code>false</code> otherwise.\n   *\n   * @param {AxisAlignedBoundingBox} [right] The second AxisAlignedBoundingBox to compare with.\n   * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n   */\n  equals(right) {\n    return (\n      this === right ||\n      (Boolean(right) &&\n        this.center.equals(right.center) &&\n        this.minimum.equals(right.minimum) &&\n        this.maximum.equals(right.maximum))\n    );\n  }\n\n  /**\n   * Determines which side of a plane a box is located.\n   *\n   * @param {Plane} plane The plane to test against.\n   * @returns {Intersect} {@link Intersect.INSIDE} if the entire box is on the side of the plane\n   *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire box is\n   *                      on the opposite side, and {@link Intersect.INTERSECTING} if the box\n   *                      intersects the plane.\n   */\n  intersectPlane(plane) {\n    const h = scratchVector\n      .copy(this.maximum)\n      .subtract(this.minimum)\n      .scale(0.5); // The positive half diagonal\n    const normal = scratchNormal.from(plane.normal);\n    const e = h.x * Math.abs(normal.x) + h.y * Math.abs(normal.y) + h.z * Math.abs(normal.z);\n    const s = this.center.dot(normal) + plane.distance; // signed distance from center\n\n    if (s - e > 0) {\n      return Intersect.INSIDE;\n    }\n\n    if (s + e < 0) {\n      // Not in front because normals point inward\n      return Intersect.OUTSIDE;\n    }\n\n    return Intersect.INTERSECTING;\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, Matrix4} from 'math.gl';\nimport * as mat4 from 'gl-matrix/mat4';\nimport {Intersect} from '../constants';\n\n// import Rectangle from './rectangle';\n\n// const defaultProjection = new GeographicProjection();\n// const fromRectangle2DLowerLeft = new Vector3();\n// const fromRectangle2DUpperRight = new Vector3();\n// const fromRectangle2DSouthwest = new Cartographic();\n// const fromRectangle2DNortheast = new Cartographic();\n\n// const fromRectangle3DScratch = [];\n\nconst scratchVector = new Vector3();\nconst scratchVector2 = new Vector3();\n\nexport default class BoundingSphere {\n  constructor(center = [0, 0, 0], radius = 0.0) {\n    this.radius = -0;\n    this.center = new Vector3();\n    this.fromCenterRadius(center, radius);\n  }\n\n  fromCenterRadius(center, radius) {\n    this.center.from(center);\n    this.radius = radius;\n    return this;\n  }\n\n  // Computes a bounding sphere from the corner points of an axis-aligned bounding box.  The sphere\n  // tighly and fully encompases the box.\n  fromCornerPoints(corner, oppositeCorner) {\n    oppositeCorner = scratchVector.from(oppositeCorner);\n    this.center = new Vector3()\n      .from(corner)\n      .add(oppositeCorner)\n      .scale(0.5);\n    this.radius = this.center.distance(oppositeCorner);\n    return this;\n  }\n\n  // Compares the provided BoundingSphere componentwise\n  equals(right) {\n    return (\n      this === right ||\n      (Boolean(right) && this.center.equals(right.center) && this.radius === right.radius)\n    );\n  }\n\n  // Duplicates a BoundingSphere instance.\n  clone() {\n    return new BoundingSphere(this.center, this.radius);\n  }\n\n  // Computes a bounding sphere that contains both the left and right bounding spheres.\n  union(boundingSphere) {\n    const leftCenter = this.center;\n    const leftRadius = this.radius;\n    const rightCenter = boundingSphere.center;\n    const rightRadius = boundingSphere.radius;\n\n    const toRightCenter = scratchVector.copy(rightCenter).subtract(leftCenter);\n    const centerSeparation = toRightCenter.magnitude();\n\n    if (leftRadius >= centerSeparation + rightRadius) {\n      // Left sphere wins.\n      return this.clone();\n    }\n\n    if (rightRadius >= centerSeparation + leftRadius) {\n      // Right sphere wins.\n      return boundingSphere.clone();\n    }\n\n    // There are two tangent points, one on far side of each sphere.\n    const halfDistanceBetweenTangentPoints = (leftRadius + centerSeparation + rightRadius) * 0.5;\n\n    // Compute the center point halfway between the two tangent points.\n    scratchVector2\n      .copy(toRightCenter)\n      .scale((-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation)\n      .add(leftCenter);\n\n    this.center.copy(scratchVector2);\n    this.radius = halfDistanceBetweenTangentPoints;\n\n    return this;\n  }\n\n  // Computes a bounding sphere by enlarging the provided sphere to contain the provided point.\n  expand(point) {\n    point = scratchVector.from(point);\n    const radius = point.subtract(this.center).magnitude();\n    if (radius > this.radius) {\n      this.radius = radius;\n    }\n    return this;\n  }\n\n  // Determines which side of a plane a sphere is located.\n  intersectPlane(plane) {\n    var center = this.center;\n    var radius = this.radius;\n    var normal = plane.normal;\n    var distanceToPlane = normal.dot(center) + plane.distance;\n\n    // The center point is negative side of the plane normal\n    if (distanceToPlane < -radius) {\n      return Intersect.OUTSIDE;\n    }\n    // The center point is positive side of the plane, but radius extends beyond it; partial overlap\n    if (distanceToPlane < radius) {\n      return Intersect.INTERSECTING;\n    }\n    // The center point and radius is positive side of the plane\n    return Intersect.INSIDE;\n  }\n\n  // Applies a 4x4 affine transformation matrix to a bounding sphere.\n  //    *\n  // @param {BoundingSphere} sphere The bounding sphere to apply the transformation to.\n  // @param {Matrix4} transform The transformation matrix to apply to the bounding sphere.\n  // @returns {BoundingSphere} The modified this parameter or a new BoundingSphere instance if none was provided.\n  transform(transform) {\n    this.center.transform(transform);\n    const scale = mat4.getScaling(scratchVector, transform);\n    this.radius = Math.max(scale[0], Math.max(scale[1], scale[2])) * this.radius;\n    return this;\n  }\n\n  // Computes the estimated distance squared from the closest point on a bounding sphere to a point.\n  distanceSquaredTo(point) {\n    point = scratchVector.from(point);\n    const delta = point.subtract(this.center);\n    return delta.lengthSquared() - this.radius * this.radius;\n  }\n\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Matrix from './base/matrix';\nimport {checkVector, deprecated} from '../lib/validators';\nimport {vec4_transformMat3} from '../lib/gl-matrix-extras';\n\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\n\nconst constants = {};\n\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n    return constants.ZERO;\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 3x3 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  transform(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n      case 4:\n        result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // DEPRECATED IN 3.0\n\n  transformVector(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector2(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector3(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  // Deprecations in v3.0\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Matrix3, _MathUtils} from 'math.gl';\n\nconst scratchMatrix = new Matrix3();\n\nconst scratchUnitary = new Matrix3();\nconst scratchDiagonal = new Matrix3();\n\nconst jMatrix = new Matrix3();\nconst jMatrixTranspose = new Matrix3();\n\n/**\n * Computes the eigenvectors and eigenvalues of a symmetric matrix.\n * <p>\n * Returns a diagonal matrix and unitary matrix such that:\n * <code>matrix = unitary matrix * diagonal matrix * transpose(unitary matrix)</code>\n * </p>\n * <p>\n * The values along the diagonal of the diagonal matrix are the eigenvalues. The columns\n * of the unitary matrix are the corresponding eigenvectors.\n * </p>\n *\n * @param {Matrix3} matrix The matrix to decompose into diagonal and unitary matrix. Expected to be symmetric.\n * @param {Object} [result] An object with unitary and diagonal properties which are matrices onto which to store the result.\n * @returns {Object} An object with unitary and diagonal properties which are the unitary and diagonal matrices, respectively.\n *\n * @example\n * const a = //... symmetric matrix\n * const result = {\n *   unitary : new Matrix3(),\n *   diagonal : new Matrix3()\n * };\n * computeEigenDecomposition(a, result);\n *\n * const unitaryTranspose = Matrix3.transpose(result.unitary, new Matrix3());\n * const b = Matrix3.multiply(result.unitary, result.diagonal, new Matrix3());\n * Matrix3.multiply(b, unitaryTranspose, b); // b is now equal to a\n *\n * const lambda = result.diagonal.getColumn(0, new Vector3()).x;  // first eigenvalue\n * const v = result.unitary.getColumn(0, new Vector3());          // first eigenvector\n * const c = v.multiplyByScalar(lambda);                          // equal to v.transformByMatrix3(a)\n */\n\n// This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n// section 8.4.3 The Classical Jacobi Algorithm\nexport default function computeEigenDecomposition(matrix, result = {}) {\n  const EIGEN_TOLERANCE = _MathUtils.EPSILON20;\n  const EIGEN_MAX_SWEEPS = 10;\n\n  let count = 0;\n  let sweep = 0;\n\n  const unitaryMatrix = scratchUnitary;\n  const diagonalMatrix = scratchDiagonal;\n\n  unitaryMatrix.identity();\n  diagonalMatrix.copy(matrix);\n\n  const epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n\n  while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n    shurDecomposition(diagonalMatrix, jMatrix);\n\n    jMatrixTranspose.copy(jMatrix).transpose();\n\n    diagonalMatrix.multiplyRight(jMatrix);\n    diagonalMatrix.multiplyLeft(jMatrixTranspose);\n    unitaryMatrix.multiplyRight(jMatrix);\n\n    if (++count > 2) {\n      ++sweep;\n      count = 0;\n    }\n  }\n\n  result.unitary = unitaryMatrix.toTarget(result.unitary);\n  result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n\n  return result;\n}\n\nfunction computeFrobeniusNorm(matrix) {\n  let norm = 0.0;\n  for (let i = 0; i < 9; ++i) {\n    const temp = matrix[i];\n    norm += temp * temp;\n  }\n  return Math.sqrt(norm);\n}\n\nconst rowVal = [1, 0, 0];\nconst colVal = [2, 2, 1];\n\n// Computes the \"off-diagonal\" Frobenius norm.\n// Assumes matrix is symmetric.\nfunction offDiagonalFrobeniusNorm(matrix) {\n  let norm = 0.0;\n  for (let i = 0; i < 3; ++i) {\n    const temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n    norm += 2.0 * temp * temp;\n  }\n  return Math.sqrt(norm);\n}\n\n// The routine takes a matrix, which is assumed to be symmetric, and\n// finds the largest off-diagonal term, and then creates\n// a matrix (result) which can be used to help reduce it\n//\n// This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n// section 8.4.2 The 2by2 Symmetric Schur Decomposition.\n//\n// eslint-disable-next-line max-statements\nfunction shurDecomposition(matrix, result) {\n  const tolerance = _MathUtils.EPSILON15;\n\n  let maxDiagonal = 0.0;\n  let rotAxis = 1;\n\n  // find pivot (rotAxis) based on max diagonal of matrix\n  for (let i = 0; i < 3; ++i) {\n    const temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n    if (temp > maxDiagonal) {\n      rotAxis = i;\n      maxDiagonal = temp;\n    }\n  }\n\n  const p = rowVal[rotAxis];\n  const q = colVal[rotAxis];\n\n  let c = 1.0;\n  let s = 0.0;\n\n  if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n    const qq = matrix[scratchMatrix.getElementIndex(q, q)];\n    const pp = matrix[scratchMatrix.getElementIndex(p, p)];\n    const qp = matrix[scratchMatrix.getElementIndex(q, p)];\n\n    const tau = (qq - pp) / 2.0 / qp;\n    let t;\n\n    if (tau < 0.0) {\n      t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n    } else {\n      t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n    }\n\n    c = 1.0 / Math.sqrt(1.0 + t * t);\n    s = t * c;\n  }\n\n  // Copy into result\n  Matrix3.IDENTITY.to(result);\n  result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n  result[scratchMatrix.getElementIndex(q, p)] = s;\n  result[scratchMatrix.getElementIndex(p, q)] = -s;\n\n  return result;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3} from 'math.gl';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\n\nconst scratchVector2 = new Vector3();\n\nconst scratchVector3 = new Vector3();\n\nconst scratchVector4 = new Vector3();\n\nconst scratchVector5 = new Vector3();\n\nconst scratchVector6 = new Vector3();\n\nconst scratchCovarianceResult = new Matrix3();\n\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\n\n// Computes an instance of an OrientedBoundingBox of the given positions.\n// This is an implementation of Stefan Gottschalk's Collision Queries using Oriented Bounding Boxes solution (PHD thesis).\n// Reference: http://gamma.cs.unc.edu/users/gottschalk/main.pdf\n// eslint-disable-next-line max-statements\nexport default function makeOrientedBoundingBoxfromPoints(positions, result) {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n\n  const {unitary} = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    u1 = Math.max(position.dot(v1), u1);\n    u2 = Math.max(position.dot(v2), u2);\n    u3 = Math.max(position.dot(v3), u3);\n\n    l1 = Math.min(position.dot(v1), l1);\n    l2 = Math.min(position.dot(v2), l2);\n    l3 = Math.min(position.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n\n  result.center\n    .copy(v1)\n    .add(v2)\n    .add(v3);\n\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  result.halfAxes.multiplyByScalar(scale);\n\n  return result;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3} from 'math.gl';\nimport BoundingSphere from './bounding-sphere';\nimport {Intersect} from '../constants';\nimport makeOrientedBoundingBoxfromPoints from '../algorithms/bounding-box-from-points';\nconst scratchVector = new Vector3();\n\nconst scratchOffset = new Vector3();\nconst scratchVectorU = new Vector3();\nconst scratchVectorV = new Vector3();\nconst scratchVectorW = new Vector3();\nconst scratchPPrime = new Vector3();\nconst scratchCorner = new Vector3();\nconst scratchToCenter = new Vector3();\n\nconst fromOrientedBoundingBoxScratchU = new Vector3();\nconst fromOrientedBoundingBoxScratchV = new Vector3();\nconst fromOrientedBoundingBoxScratchW = new Vector3();\n\nconst MATRIX3 = {\n  COLUMN0ROW0: 0,\n  COLUMN0ROW1: 1,\n  COLUMN0ROW2: 2,\n  COLUMN1ROW0: 3,\n  COLUMN1ROW1: 4,\n  COLUMN1ROW2: 5,\n  COLUMN2ROW0: 6,\n  COLUMN2ROW1: 7,\n  COLUMN2ROW2: 8\n};\n\nexport default class OrientedBoundingBox {\n  // An OrientedBoundingBox of some object is a closed and convex cuboid. It can provide a tighter bounding volume than {@link BoundingSphere} or {@link AxisAlignedBoundingBox} in many cases.\n  constructor(center = [0, 0, 0], halfAxes = [0, 0, 0, 0, 0, 0, 0, 0, 0]) {\n    this.center = new Vector3().from(center);\n    this.halfAxes = new Matrix3(halfAxes);\n  }\n\n  // Duplicates a OrientedBoundingBox instance.\n  clone(result) {\n    return new OrientedBoundingBox(this.center, this.halfAxes);\n  }\n\n  fromPoints(points, result = new OrientedBoundingBox()) {\n    return makeOrientedBoundingBoxfromPoints(points, result);\n  }\n\n  // Compares the provided OrientedBoundingBox componentwise and returns\n  equals(right) {\n    return (\n      this === right ||\n      (Boolean(right) && this.center.equals(right.center) && this.halfAxes.equals(right.halfAxes))\n    );\n  }\n\n  // Computes a tight-fitting bounding sphere enclosing the provided oriented bounding box.\n  getBoundingSphere(result = new BoundingSphere()) {\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, fromOrientedBoundingBoxScratchU);\n    const v = halfAxes.getColumn(1, fromOrientedBoundingBoxScratchV);\n    const w = halfAxes.getColumn(2, fromOrientedBoundingBoxScratchW);\n\n    // Calculate \"corner\" vector\n    const cornerVector = scratchVector\n      .copy(u)\n      .add(v)\n      .add(w);\n\n    result.center.copy(this.center);\n    result.radius = cornerVector.magnitude();\n\n    return result;\n  }\n\n  /**\n   * Determines which side of a plane the oriented bounding box is located.\n   *\n   * @param {OrientedBoundingBox} box The oriented bounding box to test.\n   * @param {Plane} plane The plane to test against.\n   * @returns {Intersect} {@link Intersect.INSIDE} if the entire box is on the side of the plane the normal is pointing, {@link Intersect.OUTSIDE} if the entire box is on the opposite side, and {@link Intersect.INTERSECTING} if the box intersects the plane.\n   */\n  intersectPlane(plane) {\n    const center = this.center;\n    const normal = plane.normal;\n    const halfAxes = this.halfAxes;\n\n    const normalX = normal.x;\n    const normalY = normal.y;\n    const normalZ = normal.z;\n\n    // Plane is used as if it is its normal; the first three components are assumed to be normalized\n    const radEffective =\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN0ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN0ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN0ROW2]\n      ) +\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN1ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN1ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN1ROW2]\n      ) +\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN2ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN2ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN2ROW2]\n      );\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    if (distanceToPlane <= -radEffective) {\n      // The entire box is on the negative side of the plane normal\n      return Intersect.OUTSIDE;\n    } else if (distanceToPlane >= radEffective) {\n      // The entire box is on the positive side of the plane normal\n      return Intersect.INSIDE;\n    }\n    return Intersect.INTERSECTING;\n  }\n\n  // Computes the estimated distance from the closest point on a bounding box to a point.\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  // Computes the estimated distance squared from the closest point on a bounding box to a point.\n  // See Geometric Tools for Computer Graphics 10.4.2\n\n  // eslint-disable-next-line max-statements\n  distanceSquaredTo(point) {\n    const offset = scratchOffset.copy(point).subtract(this.center);\n\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    const uHalf = u.magnitude();\n    const vHalf = v.magnitude();\n    const wHalf = w.magnitude();\n\n    u.normalize();\n    v.normalize();\n    w.normalize();\n\n    const pPrime = scratchPPrime;\n    pPrime.x = offset.dot(u);\n    pPrime.y = offset.dot(v);\n    pPrime.z = offset.dot(w);\n\n    let distanceSquared = 0.0;\n    let d;\n\n    if (pPrime.x < -uHalf) {\n      d = pPrime.x + uHalf;\n      distanceSquared += d * d;\n    } else if (pPrime.x > uHalf) {\n      d = pPrime.x - uHalf;\n      distanceSquared += d * d;\n    }\n\n    if (pPrime.y < -vHalf) {\n      d = pPrime.y + vHalf;\n      distanceSquared += d * d;\n    } else if (pPrime.y > vHalf) {\n      d = pPrime.y - vHalf;\n      distanceSquared += d * d;\n    }\n\n    if (pPrime.z < -wHalf) {\n      d = pPrime.z + wHalf;\n      distanceSquared += d * d;\n    } else if (pPrime.z > wHalf) {\n      d = pPrime.z - wHalf;\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n\n  // The distances calculated by the vector from the center of the bounding box\n  // to position projected onto direction.\n\n  // eslint-disable-next-line max-statements\n  computePlaneDistances(position, direction, result = [[], []]) {\n    let minDist = Number.POSITIVE_INFINITY;\n    let maxDist = Number.NEGATIVE_INFINITY;\n\n    const center = this.center;\n    const halfAxes = this.halfAxes;\n\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    // project first corner\n    const corner = scratchCorner\n      .copy(u)\n      .add(v)\n      .add(w)\n      .add(center);\n\n    const toCenter = scratchToCenter.copy(corner).subtract(position);\n    let mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project second corner\n    corner\n      .copy(center)\n      .add(u)\n      .add(v)\n      .subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project third corner\n    corner\n      .copy(center)\n      .add(u)\n      .subtract(v)\n      .add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project fourth corner\n    corner\n      .copy(center)\n      .add(u)\n      .subtract(v)\n      .subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project fifth corner\n    center\n      .copy(corner)\n      .subtract(u)\n      .add(v)\n      .add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project sixth corner\n    center\n      .copy(corner)\n      .subtract(u)\n      .add(v)\n      .subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project seventh corner\n    center\n      .copy(corner)\n      .subtract(u)\n      .subtract(v)\n      .add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project eighth corner\n    center\n      .copy(corner)\n      .subtract(u)\n      .subtract(v)\n      .subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    result.start = minDist;\n    result.stop = maxDist;\n    return result;\n  }\n\n  getTransform() {\n    // const modelMatrix = Matrix4.fromRotationTranslation(this.boundingVolume.halfAxes, this.boundingVolume.center);\n    // return modelMatrix;\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, equals, assert, MathUtils} from 'math.gl';\n\nconst scratchPosition = new Vector3();\nconst scratchNormal = new Vector3();\n\n// A plane in Hessian Normal Form\nexport default class Plane {\n  constructor(normal = [0, 0, 1], distance = 0) {\n    this.normal = new Vector3();\n    this.distance = -0;\n    this.fromNormalDistance(normal, distance);\n  }\n\n  fromNormalDistance(normal, distance) {\n    assert(Number.isFinite(distance));\n    this.normal.from(normal).normalize();\n    this.distance = distance;\n    return this;\n  }\n\n  // Creates a plane from a normal and a point on the plane.\n  fromPointNormal(point, normal) {\n    point = scratchPosition.from(point);\n    this.normal.from(normal).normalize();\n    const distance = -this.normal.dot(point);\n    this.distance = distance;\n\n    return this;\n  }\n\n  // Creates a plane from the general equation\n  fromCoefficients(a, b, c, d) {\n    this.normal.set(a, b, c);\n    assert(this.normal.len() === 1);\n    this.distance = d;\n    return this;\n  }\n\n  // Duplicates a Plane instance.\n  clone(plane) {\n    return new Plane(this.normal, this.distance);\n  }\n\n  // Compares the provided Planes by normal and distance\n  equals(right) {\n    return equals(this.distance, right.distance) && equals(this.normal, right.normal);\n  }\n\n  // Computes the signed shortest distance of a point to a plane.\n  // The sign of the distance determines which side of the plane the point is on.\n  getPointDistance(point) {\n    return this.normal.dot(point) + this.distance;\n  }\n\n  // Transforms the plane by the given transformation matrix.\n  transform(matrix4) {\n    const normal = scratchNormal\n      .copy(this.normal)\n      .transformAsVector(matrix4)\n      .normalize();\n    const point = this.normal.scale(-this.distance).transform(matrix4);\n    return this.fromPointNormal(point, normal);\n  }\n\n  // Projects a point onto the plane.\n  projectPointOntoPlane(point, result = [0, 0, 0]) {\n    point = scratchPosition.from(point);\n    // projectedPoint = point - (normal.point + scale) * normal\n    const pointDistance = this.getPointDistance(point);\n    const scaledNormal = scratchNormal.copy(this.normal).scale(pointDistance);\n\n    return point.subtract(scaledNormal).to(result);\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, Vector4, assert} from 'math.gl';\nimport {Intersect} from '../constants';\nimport Plane from './plane';\n\n// X, Y, Z Unit vectors\nconst faces = [new Vector3([1, 0, 0]), new Vector3([0, 1, 0]), new Vector3([0, 0, 1])];\n\nconst scratchPlaneCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nconst scratchPlane = new Plane(new Vector3(1.0, 0.0, 0.0), 0.0);\n\n// A culling volume defined by planes.\nexport default class CullingVolume {\n  // For plane masks (as used in {@link CullingVolume#computeVisibilityWithPlaneMask}), this special value\n  // represents the case where the object bounding volume is entirely outside the culling volume.\n  static get MASK_OUTSIDE() {\n    return 0xffffffff;\n  }\n\n  // For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n  // represents the case where the object bounding volume is entirely inside the culling volume.\n  static get MASK_INSIDE() {\n    return 0x00000000;\n  }\n\n  // For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n  // represents the case where the object bounding volume (may) intersect all planes of the culling volume.\n  static get MASK_INDETERMINATE() {\n    return 0x7fffffff;\n  }\n\n  constructor(planes = []) {\n    // {Cartesian4[]} [planes] An array of clipping planes.\n    this.planes = planes;\n    assert(this.planes.every(plane => plane instanceof Plane));\n  }\n\n  // Constructs a culling volume from a bounding sphere. Creates six planes that create a box containing the sphere.\n  // The planes are aligned to the x, y, and z axes in world coordinates.\n  fromBoundingSphere(boundingSphere) {\n    this.planes.length = 2 * faces.length;\n\n    const center = boundingSphere.center;\n    const radius = boundingSphere.radius;\n\n    let planeIndex = 0;\n\n    for (const faceNormal of faces) {\n      let plane0 = this.planes[planeIndex];\n      let plane1 = this.planes[planeIndex + 1];\n\n      if (!plane0) {\n        plane0 = this.planes[planeIndex] = new Vector4();\n      }\n      if (!plane1) {\n        plane1 = this.planes[planeIndex + 1] = new Vector4();\n      }\n\n      const plane0Center = scratchPlaneCenter\n        .copy(faceNormal)\n        .scale(-radius)\n        .add(center);\n      const plane0Distance = -faceNormal.dot(plane0Center);\n\n      // plane0.fromNormalDistance(faceNormal, plane0Distance);\n      plane0.x = faceNormal.x;\n      plane0.y = faceNormal.y;\n      plane0.z = faceNormal.z;\n      plane0.w = plane0Distance;\n\n      const plane1Center = scratchPlaneCenter\n        .copy(faceNormal)\n        .scale(radius)\n        .add(center);\n\n      const negatedFaceNormal = scratchPlaneNormal.copy(faceNormal).negate();\n\n      const plane1Distance = -negatedFaceNormal.dot(plane1Center);\n\n      // plane1.fromNormalDistance(negatedFaceNormal, plane1Distance);\n      plane1.x = negatedFaceNormal.x;\n      plane1.y = negatedFaceNormal.y;\n      plane1.z = negatedFaceNormal.z;\n      plane1.w = plane1Distance;\n\n      planeIndex += 2;\n    }\n\n    return this;\n  }\n\n  // Determines whether a bounding volume intersects the culling volume.\n  computeVisibility(boundingVolume) {\n    assert(boundingVolume);\n    // const planes = this.planes;\n    let intersect = Intersect.INSIDE;\n    for (const planeCoefficients of this.planes) {\n      const plane = scratchPlane.fromCoefficients(...planeCoefficients);\n      const result = boundingVolume.intersectPlane(plane);\n      switch (result) {\n        case Intersect.OUTSIDE:\n          // We are done\n          return Intersect.OUTSIDE;\n\n        case Intersect.INTERSECTING:\n          // If no other intersection is outside, return INTERSECTING\n          intersect = Intersect.INTERSECTING;\n          break;\n\n        default:\n      }\n    }\n\n    return intersect;\n  }\n\n  // Determines whether a bounding volume intersects the culling volume.\n  /*\n   * @param {Number} parentPlaneMask A bit mask from the boundingVolume's parent's check against the same culling\n   *                                 volume, such that if (planeMask & (1 << planeIndex) === 0), for k < 31, then\n   *                                 the parent (and therefore this) volume is completely inside plane[planeIndex]\n   *                                 and that plane check can be skipped.\n   */\n  computeVisibilityWithPlaneMask(boundingVolume, parentPlaneMask) {\n    assert(boundingVolume, 'boundingVolume is required.');\n    assert(Number.isFinite(parentPlaneMask), 'parentPlaneMask is required.');\n\n    if (\n      parentPlaneMask === CullingVolume.MASK_OUTSIDE ||\n      parentPlaneMask === CullingVolume.MASK_INSIDE\n    ) {\n      // parent is completely outside or completely inside, so this child is as well.\n      return parentPlaneMask;\n    }\n\n    // Start with MASK_INSIDE (all zeros) so that after the loop, the return value can be compared with MASK_INSIDE.\n    // (Because if there are fewer than 31 planes, the upper bits wont be changed.)\n    let mask = CullingVolume.MASK_INSIDE;\n\n    const planes = this.planes;\n    for (let k = 0; k < this.planes.length; ++k) {\n      // For k greater than 31 (since 31 is the maximum number of INSIDE/INTERSECTING bits we can store), skip the optimization.\n      const flag = k < 31 ? 1 << k : 0;\n      if (k < 31 && (parentPlaneMask & flag) === 0) {\n        // boundingVolume is known to be INSIDE this plane.\n        continue;\n      }\n\n      const plane = scratchPlane.fromCoefficients(...planes[k]);\n      const result = boundingVolume.intersectPlane(plane);\n      if (result === Intersect.OUTSIDE) {\n        return CullingVolume.MASK_OUTSIDE;\n      } else if (result === Intersect.INTERSECTING) {\n        mask |= flag;\n      }\n    }\n\n    return mask;\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Note: This class is still an experimental export, mainly used by other test cases\n// - It has not been fully adapted to math.gl conventions\n// - Documentation has not been ported\n\nimport {Vector3, Vector4, Matrix4, assert} from 'math.gl';\nimport CullingVolume from './culling-volume';\n\nconst scratchPlaneRightVector = new Vector3();\nconst scratchPlaneNearCenter = new Vector3();\nconst scratchPlaneFarCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\n\nexport default class PerspectiveOffCenterFrustum {\n  /**\n   * The viewing frustum is defined by 6 planes.\n   * Each plane is represented by a {@link Vector4} object, where the x, y, and z components\n   * define the unit vector normal to the plane, and the w component is the distance of the\n   * plane from the origin/camera position.\n   *\n   * @alias PerspectiveOffCenterFrustum\n   * @constructor\n   *\n   * @param {Object} [options] An object with the following properties:\n   * @param {Number} [options.left] The left clipping plane distance.\n   * @param {Number} [options.right] The right clipping plane distance.\n   * @param {Number} [options.top] The top clipping plane distance.\n   * @param {Number} [options.bottom] The bottom clipping plane distance.\n   * @param {Number} [options.near=1.0] The near clipping plane distance.\n   * @param {Number} [options.far=500000000.0] The far clipping plane distance.\n   *\n   * @example\n   * const frustum = new PerspectiveOffCenterFrustum({\n   *     left : -1.0,\n   *     right : 1.0,\n   *     top : 1.0,\n   *     bottom : -1.0,\n   *     near : 1.0,\n   *     far : 100.0\n   * });\n   *\n   * @see PerspectiveFrustum\n   */\n  constructor(options = {}) {\n    options = {near: 1.0, far: 500000000.0, ...options};\n\n    /**\n     * Defines the left clipping plane.\n     * @type {Number}\n     * @default undefined\n     */\n    this.left = options.left;\n    this._left = undefined;\n\n    /**\n     * Defines the right clipping plane.\n     * @type {Number}\n     * @default undefined\n     */\n    this.right = options.right;\n    this._right = undefined;\n\n    /**\n     * Defines the top clipping plane.\n     * @type {Number}\n     * @default undefined\n     */\n    this.top = options.top;\n    this._top = undefined;\n\n    /**\n     * Defines the bottom clipping plane.\n     * @type {Number}\n     * @default undefined\n     */\n    this.bottom = options.bottom;\n    this._bottom = undefined;\n\n    /**\n     * The distance of the near plane.\n     * @type {Number}\n     * @default 1.0\n     */\n    this.near = options.near;\n    this._near = this.near;\n\n    /**\n     * The distance of the far plane.\n     * @type {Number}\n     * @default 500000000.0\n     */\n    this.far = options.far;\n    this._far = this.far;\n\n    this._cullingVolume = new CullingVolume();\n    this._perspectiveMatrix = new Matrix4();\n    this._infinitePerspective = new Matrix4();\n  }\n\n  /**\n   * Returns a duplicate of a PerspectiveOffCenterFrustum instance.\n   * @returns {PerspectiveOffCenterFrustum} A new PerspectiveFrustum instance.\n   * */\n  clone() {\n    return new PerspectiveOffCenterFrustum({\n      right: this.right,\n      left: this.left,\n      top: this.top,\n      bottom: this.bottom,\n      near: this.near,\n      far: this.far\n    });\n  }\n\n  /**\n   * Compares the provided PerspectiveOffCenterFrustum componentwise and returns\n   * <code>true</code> if they are equal, <code>false</code> otherwise.\n   *\n   * @param {PerspectiveOffCenterFrustum} [other] The right hand side PerspectiveOffCenterFrustum.\n   * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n   */\n  equals(other) {\n    return (\n      other &&\n      other instanceof PerspectiveOffCenterFrustum &&\n      this.right === other.right &&\n      this.left === other.left &&\n      this.top === other.top &&\n      this.bottom === other.bottom &&\n      this.near === other.near &&\n      this.far === other.far\n    );\n  }\n\n  /**\n   * Gets the perspective projection matrix computed from the view frustum.\n   * @memberof PerspectiveOffCenterFrustum.prototype\n   * @type {Matrix4}\n   * @readonly\n   *\n   * @see PerspectiveOffCenterFrustum#infiniteProjectionMatrix\n   */\n  get projectionMatrix() {\n    update(this);\n    return this._perspectiveMatrix;\n  }\n\n  /**\n   * Gets the perspective projection matrix computed from the view frustum with an infinite far plane.\n   * @memberof PerspectiveOffCenterFrustum.prototype\n   * @type {Matrix4}\n   * @readonly\n   *\n   * @see PerspectiveOffCenterFrustum#projectionMatrix\n   */\n  get infiniteProjectionMatrix() {\n    update(this);\n    return this._infinitePerspective;\n  }\n\n  /**\n   * Creates a culling volume for this frustum.\n   *\n   * @param {Vector3} position The eye position.\n   * @param {Vector3} direction The view direction.\n   * @param {Vector3} up The up direction.\n   * @returns {CullingVolume} A culling volume at the given position and orientation.\n   *\n   * @example\n   * // Check if a bounding volume intersects the frustum.\n   * const cullingVolume = frustum.computeCullingVolume(cameraPosition, cameraDirection, cameraUp);\n   * const intersect = cullingVolume.computeVisibility(boundingVolume);\n   */\n  // eslint-disable-next-line complexity, max-statements\n  computeCullingVolume(position, direction, up) {\n    assert(position, 'position is required.');\n    assert(direction, 'direction is required.');\n    assert(up, 'up is required.');\n\n    const planes = this._cullingVolume.planes;\n\n    const right = scratchPlaneRightVector.copy(direction).cross(up);\n\n    const nearCenter = scratchPlaneNearCenter\n      .copy(direction)\n      .multiplyByScalar(this.near)\n      .add(position);\n\n    const farCenter = scratchPlaneFarCenter\n      .copy(direction)\n      .multiplyByScalar(this.far)\n      .add(position);\n\n    let normal = scratchPlaneNormal;\n\n    // Left plane computation\n    normal\n      .copy(right)\n      .multiplyByScalar(this.left)\n      .add(nearCenter)\n      .subtract(position)\n      .normalize()\n      .cross(up)\n      .normalize();\n\n    planes[0] = planes[0] || new Vector4();\n    let plane = planes[0];\n    plane.x = normal.x;\n    plane.y = normal.y;\n    plane.z = normal.z;\n    plane.w = -normal.dot(position);\n\n    // Right plane computation\n    normal\n      .copy(right)\n      .multiplyByScalar(this.right)\n      .add(nearCenter)\n      .subtract(position)\n      .normalize()\n      .cross(up)\n      .normalize();\n\n    planes[1] = planes[1] || new Vector4();\n    plane = planes[1];\n    plane.x = normal.x;\n    plane.y = normal.y;\n    plane.z = normal.z;\n    plane.w = -normal.dot(position);\n\n    // Bottom plane computation\n    normal\n      .copy(up)\n      .multiplyByScalar(this.bottom)\n      .add(nearCenter)\n      .subtract(position)\n      .normalize()\n      .cross(right)\n      .normalize();\n\n    planes[2] = planes[2] || new Vector4();\n    plane = planes[2];\n    plane.x = normal.x;\n    plane.y = normal.y;\n    plane.z = normal.z;\n    plane.w = -normal.dot(position);\n\n    // Top plane computation\n    normal\n      .copy(up)\n      .multiplyByScalar(this.top)\n      .add(nearCenter)\n      .subtract(position)\n      .normalize()\n      .cross(right)\n      .normalize();\n\n    planes[3] = planes[3] || new Vector4();\n    plane = planes[3];\n    plane.x = normal.x;\n    plane.y = normal.y;\n    plane.z = normal.z;\n    plane.w = -normal.dot(position);\n\n    normal = new Vector3().copy(direction).normalize();\n\n    // Near plane computation\n    planes[4] = planes[4] || new Vector4();\n    plane = planes[4];\n    plane.x = direction.x;\n    plane.y = direction.y;\n    plane.z = direction.z;\n    plane.w = -direction.dot(nearCenter);\n\n    // Far plane computation\n    normal\n      .copy(direction)\n      .negate()\n      .normalize();\n\n    planes[5] = planes[5] || new Vector4();\n    plane = planes[5];\n    plane.x = normal.x;\n    plane.y = normal.y;\n    plane.z = normal.z;\n    plane.w = -normal.dot(farCenter);\n\n    return this._cullingVolume;\n  }\n\n  /**\n   * Returns the pixel's width and height in meters.\n   *\n   * @param {Number} drawingBufferWidth The width of the drawing buffer.\n   * @param {Number} drawingBufferHeight The height of the drawing buffer.\n   * @param {Number} distance The distance to the near plane in meters.\n   * @param {Vector2} result The object onto which to store the result.\n   * @returns {Vector2} The modified result parameter or a new instance of {@link Vector2} with the pixel's width and height in the x and y properties, respectively.\n   *\n   * @exception {DeveloperError} drawingBufferWidth must be greater than zero.\n   * @exception {DeveloperError} drawingBufferHeight must be greater than zero.\n   *\n   * @example\n   * // Example 1\n   * // Get the width and height of a pixel.\n   * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, 1.0, new Vector2());\n   *\n   * @example\n   * // Example 2\n   * // Get the width and height of a pixel if the near plane was set to 'distance'.\n   * // For example, get the size of a pixel of an image on a billboard.\n   * const position = camera.position;\n   * const direction = camera.direction;\n   * const toCenter = Vector3.subtract(primitive.boundingVolume.center, position, new Vector3());      // vector from camera to a primitive\n   * const toCenterProj = Vector3.multiplyByScalar(direction, Vector3.dot(direction, toCenter), new Vector3()); // project vector onto camera direction vector\n   * const distance = Vector3.magnitude(toCenterProj);\n   * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, distance, new Vector2());\n   */\n  getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result) {\n    update(this);\n\n    assert(Number.isFinite(drawingBufferWidth) && Number.isFinite(drawingBufferHeight));\n    // 'Both drawingBufferWidth and drawingBufferHeight are required.'\n    assert(drawingBufferWidth > 0);\n    // 'drawingBufferWidth must be greater than zero.'\n    assert(drawingBufferHeight > 0);\n    // 'drawingBufferHeight must be greater than zero.'\n    assert(distance > 0);\n    // 'distance is required.');\n    assert(result);\n    // 'A result object is required.');\n\n    const inverseNear = 1.0 / this.near;\n    let tanTheta = this.top * inverseNear;\n    const pixelHeight = (2.0 * distance * tanTheta) / drawingBufferHeight;\n    tanTheta = this.right * inverseNear;\n    const pixelWidth = (2.0 * distance * tanTheta) / drawingBufferWidth;\n\n    result.x = pixelWidth;\n    result.y = pixelHeight;\n    return result;\n  }\n}\n\n// eslint-disable-next-line complexity, max-statements\nfunction update(frustum) {\n  assert(\n    Number.isFinite(frustum.right) &&\n      Number.isFinite(frustum.left) &&\n      Number.isFinite(frustum.top) &&\n      Number.isFinite(frustum.bottom) &&\n      Number.isFinite(frustum.near) &&\n      Number.isFinite(frustum.far)\n  );\n  // throw new DeveloperError('right, left, top, bottom, near, or far parameters are not set.');\n\n  const {top, bottom, right, left, near, far} = frustum;\n\n  if (\n    top !== frustum._top ||\n    bottom !== frustum._bottom ||\n    left !== frustum._left ||\n    right !== frustum._right ||\n    near !== frustum._near ||\n    far !== frustum._far\n  ) {\n    assert(\n      frustum.near > 0 && frustum.near < frustum.far,\n      'near must be greater than zero and less than far.'\n    );\n\n    frustum._left = left;\n    frustum._right = right;\n    frustum._top = top;\n    frustum._bottom = bottom;\n    frustum._near = near;\n    frustum._far = far;\n    frustum._perspectiveMatrix = new Matrix4().frustum({\n      left,\n      right,\n      bottom,\n      top,\n      near,\n      far\n    });\n    frustum._infinitePerspective = new Matrix4().frustum({\n      left,\n      right,\n      bottom,\n      top,\n      near,\n      far: Infinity\n    });\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Note: This class is still an experimental export, mainly used by other test cases\n// - It has not been fully adapted to math.gl conventions\n// - Documentation has not been ported\n\nimport {assert} from 'math.gl';\nimport PerspectiveOffCenterFrustum from './perspective-off-center-frustum';\n\nconst defined = val => val !== null && typeof val !== 'undefined';\n\n/**\n * The viewing frustum is defined by 6 planes.\n * Each plane is represented by a {@link Vector4} object, where the x, y, and z components\n * define the unit vector normal to the plane, and the w component is the distance of the\n * plane from the origin/camera position.\n *\n * @alias PerspectiveFrustum\n * @constructor\n *\n * @param {Object} [options] An object with the following properties:\n * @param {Number} [options.fov] The angle of the field of view (FOV), in radians.\n * @param {Number} [options.aspectRatio] The aspect ratio of the frustum's width to it's height.\n * @param {Number} [options.near=1.0] The distance of the near plane.\n * @param {Number} [options.far=500000000.0] The distance of the far plane.\n * @param {Number} [options.xOffset=0.0] The offset in the x direction.\n * @param {Number} [options.yOffset=0.0] The offset in the y direction.\n *\n * @example\n * var frustum = new PerspectiveFrustum({\n *     fov : Math.PI_OVER_THREE,\n *     aspectRatio : canvas.clientWidth / canvas.clientHeight\n *     near : 1.0,\n *     far : 1000.0\n * });\n *\n * @see PerspectiveOffCenterFrustum\n */\nexport default class PerspectiveFrustum {\n  constructor(options = {}) {\n    options = {\n      near: 1.0,\n      far: 500000000.0,\n      xOffset: 0.0,\n      yOffset: 0.0,\n      ...options\n    };\n\n    this._offCenterFrustum = new PerspectiveOffCenterFrustum();\n\n    /**\n     * The angle of the field of view (FOV), in radians.  This angle will be used\n     * as the horizontal FOV if the width is greater than the height, otherwise\n     * it will be the vertical FOV.\n     * @type {Number}\n     * @default undefined\n     */\n    this.fov = options.fov;\n    this._fov = undefined;\n    this._fovy = undefined;\n\n    this._sseDenominator = undefined;\n\n    /**\n     * The aspect ratio of the frustum's width to it's height.\n     * @type {Number}\n     * @default undefined\n     */\n    this.aspectRatio = options.aspectRatio;\n    this._aspectRatio = undefined;\n\n    /**\n     * The distance of the near plane.\n     * @type {Number}\n     * @default 1.0\n     */\n    this.near = options.near;\n    this._near = this.near;\n\n    /**\n     * The distance of the far plane.\n     * @type {Number}\n     * @default 500000000.0\n     */\n    this.far = options.far;\n    this._far = this.far;\n\n    /**\n     * Offsets the frustum in the x direction.\n     * @type {Number}\n     * @default 0.0\n     */\n    this.xOffset = options.xOffset;\n    this._xOffset = this.xOffset;\n\n    /**\n     * Offsets the frustum in the y direction.\n     * @type {Number}\n     * @default 0.0\n     */\n    this.yOffset = options.yOffset;\n    this._yOffset = this.yOffset;\n  }\n\n  /**\n   * Returns a duplicate of a PerspectiveFrustum instance.\n   *\n   * @param {PerspectiveFrustum} [result] The object onto which to store the result.\n   * @returns {PerspectiveFrustum} The modified result parameter or a new PerspectiveFrustum instance if one was not provided.\n   */\n  clone() {\n    return new PerspectiveFrustum({\n      aspectRatio: this.aspectRatio,\n      fov: this.fov,\n      near: this.near,\n      far: this.far\n    });\n  }\n\n  /**\n   * Compares the provided PerspectiveFrustum componentwise and returns\n   * <code>true</code> if they are equal, <code>false</code> otherwise.\n   *\n   * @param {PerspectiveFrustum} [other] The right hand side PerspectiveFrustum.\n   * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n   */\n  equals(other) {\n    if (!defined(other) || !(other instanceof PerspectiveFrustum)) {\n      return false;\n    }\n\n    update(this);\n    update(other);\n\n    return (\n      this.fov === other.fov &&\n      this.aspectRatio === other.aspectRatio &&\n      this.near === other.near &&\n      this.far === other.far &&\n      this._offCenterFrustum.equals(other._offCenterFrustum)\n    );\n  }\n\n  /**\n   * Gets the perspective projection matrix computed from the view frustum.\n   * @memberof PerspectiveFrustum.prototype\n   * @type {Matrix4}\n   * @readonly\n   *\n   * @see PerspectiveFrustum#infiniteProjectionMatrix\n   */\n  get projectionMatrix() {\n    update(this);\n    return this._offCenterFrustum.projectionMatrix;\n  }\n\n  /**\n   * The perspective projection matrix computed from the view frustum with an infinite far plane.\n   * @memberof PerspectiveFrustum.prototype\n   * @type {Matrix4}\n   * @readonly\n   *\n   * @see PerspectiveFrustum#projectionMatrix\n   */\n  get infiniteProjectionMatrix() {\n    update(this);\n    return this._offCenterFrustum.infiniteProjectionMatrix;\n  }\n\n  /**\n   * Gets the angle of the vertical field of view, in radians.\n   * @memberof PerspectiveFrustum.prototype\n   * @type {Number}\n   * @readonly\n   * @default undefined\n   */\n  get fovy() {\n    update(this);\n    return this._fovy;\n  }\n\n  /**\n   * @readonly\n   * @private\n   */\n  get sseDenominator() {\n    update(this);\n    return this._sseDenominator;\n  }\n\n  /**\n   * Creates a culling volume for this frustum.\n   *\n   * @param {Vector3} position The eye position.\n   * @param {Vector3} direction The view direction.\n   * @param {Vector3} up The up direction.\n   * @returns {CullingVolume} A culling volume at the given position and orientation.\n   *\n   * @example\n   * // Check if a bounding volume intersects the frustum.\n   * var cullingVolume = frustum.computeCullingVolume(cameraPosition, cameraDirection, cameraUp);\n   * var intersect = cullingVolume.computeVisibility(boundingVolume);\n   */\n  computeCullingVolume(position, direction, up) {\n    update(this);\n    return this._offCenterFrustum.computeCullingVolume(position, direction, up);\n  }\n\n  /**\n   * Returns the pixel's width and height in meters.\n   *\n   * @param {Number} drawingBufferWidth The width of the drawing buffer.\n   * @param {Number} drawingBufferHeight The height of the drawing buffer.\n   * @param {Number} distance The distance to the near plane in meters.\n   * @param {Vector2} result The object onto which to store the result.\n   * @returns {Vector2} The modified result parameter or a new instance of {@link Vector2} with the pixel's width and height in the x and y properties, respectively.\n   *\n   * @exception {DeveloperError} drawingBufferWidth must be greater than zero.\n   * @exception {DeveloperError} drawingBufferHeight must be greater than zero.\n   *\n   * @example\n   * // Example 1\n   * // Get the width and height of a pixel.\n   * var pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, 1.0, new Vector2());\n   *\n   * @example\n   * // Example 2\n   * // Get the width and height of a pixel if the near plane was set to 'distance'.\n   * // For example, get the size of a pixel of an image on a billboard.\n   * var position = camera.position;\n   * var direction = camera.direction;\n   * var toCenter = Vector3.subtract(primitive.boundingVolume.center, position, new Vector3());      // vector from camera to a primitive\n   * var toCenterProj = Vector3.multiplyByScalar(direction, Vector3.dot(direction, toCenter), new Vector3()); // project vector onto camera direction vector\n   * var distance = Vector3.magnitude(toCenterProj);\n   * var pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, distance, new Vector2());\n   */\n  getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result) {\n    update(this);\n    return this._offCenterFrustum.getPixelDimensions(\n      drawingBufferWidth,\n      drawingBufferHeight,\n      distance,\n      result\n    );\n  }\n}\n\n// eslint-disable-next-line complexity, max-statements\nfunction update(frustum) {\n  assert(\n    Number.isFinite(frustum.fov) &&\n      Number.isFinite(frustum.aspectRatio) &&\n      Number.isFinite(frustum.near) &&\n      Number.isFinite(frustum.far)\n  );\n  // 'fov, aspectRatio, near, or far parameters are not set.'\n\n  const f = frustum._offCenterFrustum;\n\n  if (\n    frustum.fov !== frustum._fov ||\n    frustum.aspectRatio !== frustum._aspectRatio ||\n    frustum.near !== frustum._near ||\n    frustum.far !== frustum._far ||\n    frustum.xOffset !== frustum._xOffset ||\n    frustum.yOffset !== frustum._yOffset\n  ) {\n    assert(frustum.fov >= 0 && frustum.fov < Math.PI);\n    // throw new DeveloperError('fov must be in the range [0, PI).');\n\n    assert(frustum.aspectRatio > 0);\n    // throw new DeveloperError('aspectRatio must be positive.');\n\n    assert(frustum.near >= 0 && frustum.near < frustum.far);\n    // throw new DeveloperError('near must be greater than zero and less than far.');\n\n    frustum._aspectRatio = frustum.aspectRatio;\n    frustum._fov = frustum.fov;\n    frustum._fovy =\n      frustum.aspectRatio <= 1\n        ? frustum.fov\n        : Math.atan(Math.tan(frustum.fov * 0.5) / frustum.aspectRatio) * 2.0;\n    frustum._near = frustum.near;\n    frustum._far = frustum.far;\n    frustum._sseDenominator = 2.0 * Math.tan(0.5 * frustum._fovy);\n    frustum._xOffset = frustum.xOffset;\n    frustum._yOffset = frustum.yOffset;\n\n    f.top = frustum.near * Math.tan(0.5 * frustum._fovy);\n    f.bottom = -f.top;\n    f.right = frustum.aspectRatio * f.top;\n    f.left = -f.right;\n    f.near = frustum.near;\n    f.far = frustum.far;\n\n    f.right += frustum.xOffset;\n    f.left += frustum.xOffset;\n    f.top += frustum.yOffset;\n    f.bottom += frustum.yOffset;\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3} from 'math.gl';\nimport BoundingSphere from '../lib/bounding-sphere';\n\n/* eslint-disable */\nconst fromPointsXMin = new Vector3();\nconst fromPointsYMin = new Vector3();\nconst fromPointsZMin = new Vector3();\nconst fromPointsXMax = new Vector3();\nconst fromPointsYMax = new Vector3();\nconst fromPointsZMax = new Vector3();\nconst fromPointsCurrentPos = new Vector3();\nconst fromPointsScratch = new Vector3();\nconst fromPointsRitterCenter = new Vector3();\nconst fromPointsMinBoxPt = new Vector3();\nconst fromPointsMaxBoxPt = new Vector3();\nconst fromPointsNaiveCenterScratch = new Vector3();\nconst volumeConstant = (4.0 / 3.0) * Math.PI;\n\n/*\nComputes a tight-fitting bounding sphere enclosing a list of 3D Cartesian points.\nThe bounding sphere is computed by running two algorithms, a naive algorithm and\nRitter's algorithm. The smaller of the two spheres is used to ensure a tight fit.\n   *\n@param {Vector3[]} [positions] An array of points that the bounding sphere will enclose.  Each point must have <code>x</code>, <code>y</code>, and <code>z</code> properties.\n@param {BoundingSphere} [result] The object onto which to store the result.\n@returns {BoundingSphere} The modified result parameter or a new BoundingSphere instance if one was not provided.\n   *\n@see {@link http://blogs.agi.com/insight3d/index.php/2008/02/04/a-bounding/|Bounding Sphere computation article}\n*/\n\nexport function makeBoundingSphereFromPoints(positions, result = new BoundingSphere()) {\n  if (!positions || positions.length === 0) {\n    return result.fromCenterRadius([0, 0, 0], 0);\n  }\n\n  const currentPos = fromPointsCurrentPos.copy(positions[0]);\n\n  const xMin = fromPointsXMin.copy(currentPos);\n  const yMin = fromPointsYMin.copy(currentPos);\n  const zMin = fromPointsZMin.copy(currentPos);\n\n  const xMax = fromPointsXMax.copy(currentPos);\n  const yMax = fromPointsYMax.copy(currentPos);\n  const zMax = fromPointsZMax.copy(currentPos);\n\n  for (const position of positions) {\n    currentPos.copy(position);\n\n    const x = currentPos.x;\n    const y = currentPos.y;\n    const z = currentPos.z;\n\n    // Store points containing the the smallest and largest components\n    if (x < xMin.x) {\n      currentPos.copy(xMin);\n    }\n\n    if (x > xMax.x) {\n      currentPos.copy(xMax);\n    }\n\n    if (y < yMin.y) {\n      currentPos.copy(yMin);\n    }\n\n    if (y > yMax.y) {\n      currentPos.copy(yMax);\n    }\n\n    if (z < zMin.z) {\n      currentPos.copy(zMin);\n    }\n\n    if (z > zMax.z) {\n      currentPos.copy(zMax);\n    }\n  }\n\n  // Compute x-, y-, and z-spans (Squared distances b/n each component's min. and max.).\n  const xSpan = fromPointsScratch\n    .copy(xMax)\n    .subtract(xMin)\n    .magnitudeSquared();\n  const ySpan = fromPointsScratch\n    .copy(yMax)\n    .subtract(yMin)\n    .magnitudeSquared();\n  const zSpan = fromPointsScratch\n    .copy(zMax)\n    .subtract(zMin)\n    .magnitudeSquared();\n\n  // Set the diameter endpoints to the largest span.\n  let diameter1 = xMin;\n  let diameter2 = xMax;\n  let maxSpan = xSpan;\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  // Calculate the center of the initial sphere found by Ritter's algorithm\n  const ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n\n  // Calculate the radius of the initial sphere found by Ritter's algorithm\n  let radiusSquared = fromPointsScratch\n    .copy(diameter2)\n    .subtract(ritterCenter)\n    .magnitudeSquared();\n  let ritterRadius = Math.sqrt(radiusSquared);\n\n  // Find the center of the sphere found using the Naive method.\n  const minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n\n  const maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n\n  const naiveCenter = fromPointsNaiveCenterScratch\n    .copy(minBoxPt)\n    .add(maxBoxPt)\n    .multiplyByScalar(0.5);\n\n  // Begin 2nd pass to find naive radius and modify the ritter sphere.\n  let naiveRadius = 0;\n  for (const position of positions) {\n    currentPos.copy(position);\n\n    // Find the furthest point from the naive center to calculate the naive radius.\n    const r = fromPointsScratch\n      .copy(currentPos)\n      .subtract(naiveCenter)\n      .magnitude();\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    // Make adjustments to the Ritter Sphere to include all points.\n    const oldCenterToPointSquared = fromPointsScratch\n      .copy(currentPos)\n      .subtract(ritterCenter)\n      .magnitudeSquared();\n\n    if (oldCenterToPointSquared > radiusSquared) {\n      const oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      // Calculate new radius to include the point that lies outside\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      // Calculate center of new Ritter sphere\n      const oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x = (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) / oldCenterToPoint;\n      ritterCenter.y = (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) / oldCenterToPoint;\n      ritterCenter.z = (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) / oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    ritterCenter.to(result.center);\n    result.radius = ritterRadius;\n  } else {\n    naiveCenter.to(result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nexport {INTERSECT} from './constants';\nexport {INTERSECT as Intersect} from './constants';\n\nexport {default as AxisAlignedBoundingBox} from './lib/axis-aligned-bounding-box';\nexport {default as BoundingSphere} from './lib/bounding-sphere';\nexport {default as OrientedBoundingBox} from './lib/oriented-bounding-box';\nexport {default as CullingVolume} from './lib/culling-volume';\nexport {default as Plane} from './lib/plane';\n\nexport {default as _PerspectiveOffCenterFrustum} from './lib/perspective-off-center-frustum';\nexport {default as _PerspectiveFrustum} from './lib/perspective-frustum';\n\nexport {makeBoundingSphereFromPoints} from './algorithms/bounding-sphere-from-points';\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Matrix4} from 'math.gl';\nimport {BoundingSphere, Plane} from '@math.gl/culling';\n\nconst plane = new Plane();\nconst boundingSphere = new BoundingSphere();\nconst transform = new Matrix4();\n\nexport default function cullingBench(suite, addReferenceBenchmarks) {\n  suite\n    .group('BoundingSphere')\n    .add('BoundingSphere#new()', () => new BoundingSphere())\n    .add('BoundingSphere#transform', () => boundingSphere.transform(transform))\n\n    .group('Plane')\n    .add('Plane#new()', () => new Plane())\n    .add('Plane#transform', () => plane.transform(transform));\n\n  return suite;\n}\n","import coreBench from '../modules/core/test/bench';\nimport geospatialBench from '../modules/geospatial/test/bench';\nimport cullingBench from '../modules/culling/test/bench';\n\nexport default function addBenchmarks(suite, addReferenceBenchmarks) {\n  coreBench(suite, addReferenceBenchmarks);\n  geospatialBench(suite, addReferenceBenchmarks);\n  cullingBench(suite, addReferenceBenchmarks);\n  return suite;\n}\n","import React, {PureComponent} from 'react';\nimport {render} from 'react-dom';\n\nimport BenchResults from './bench-results';\n\nimport {Bench} from '@probe.gl/bench';\nimport addBenchmarks from '../../test/modules.bench';\n\nconst addReferenceBenchmarks = false;\n\nconst LOG_ENTRY = {\n  GROUP: 'group',\n  TEST: 'test',\n  COMPLETE: 'complete'\n};\n\nfunction parseSIPrefix(itersPerSecond) {\n  const value = parseFloat(itersPerSecond);\n  const prefix = itersPerSecond[itersPerSecond.length - 1];\n  switch (prefix) {\n    case 'M':\n      return value * 1000000;\n    case 'K':\n      return value * 1000;\n    default:\n      return value;\n  }\n}\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.suite = new Bench({\n      log: this._logResult.bind(this)\n    });\n    addBenchmarks(this.suite, addReferenceBenchmarks);\n\n    this.state = {\n      log: []\n    };\n  }\n\n  componentDidMount() {\n    this.suite\n      // Calibrate performance\n      .calibrate()\n      .run()\n      // when running in browser, notify test the driver that it's done\n      .then(() => {});\n  }\n\n  _logResult(result) {\n    const {entry, id, itersPerSecond, error} = result;\n\n    const {log} = this.state;\n    switch (entry) {\n      case LOG_ENTRY.GROUP:\n        log.push({id});\n        break;\n      case LOG_ENTRY.TEST:\n        const value = parseSIPrefix(itersPerSecond);\n        // log.push(`├─ ${id}: ${itersPerSecond} iterations/s ±${(error * 100).toFixed(2)}%`);\n        log.push({\n          id,\n          value,\n          formattedValue: itersPerSecond,\n          formattedError: `${(error * 100).toFixed(2)}%`\n        });\n        break;\n      case LOG_ENTRY.COMPLETE:\n        break;\n      default:\n    }\n    this.forceUpdate();\n  }\n\n  render() {\n    const {log} = this.state;\n    return (\n      <div>\n        <BenchResults log={log} />\n      </div>\n    );\n  }\n}\n\nexport function renderToDOM(container) {\n  render(<App />, container);\n}\n"],"sourceRoot":""}